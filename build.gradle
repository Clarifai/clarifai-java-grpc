buildscript {
	repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
	}

    dependencies {
        classpath(
                "gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.5.3",
                "com.github.ben-manes:gradle-versions-plugin:0.13.0",
                "gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.4",
                "net.ltgt.gradle:gradle-apt-plugin:0.21",
        )
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id "maven-publish"
    id "signing"
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

ext["ossrhUsername"] = System.getenv('SONATYPE_USERNAME_CLARIFAI')
ext["ossrhPassword"] = System.getenv('SONATYPE_PASSWORD_CLARIFAI')
ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')


nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
        }
    }
}

group = 'com.clarifai'
version = '11.0.2'

repositories {
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    api 'com.google.protobuf:protobuf-java:3.21.6'
    api 'com.google.protobuf:protobuf-java-util:3.21.6'
    api 'io.grpc:grpc-protobuf:1.51.1'
    api 'io.grpc:grpc-stub:1.51.1'
    api 'io.grpc:grpc-netty-shaded:1.51.1'
    api 'javax.annotation:javax.annotation-api:1.3.2'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'com.squareup.okhttp3:okhttp:4.6.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

jar{
    baseName = 'clarifai-grpc'
}

// Huge thanks to Cedric Beust for documenting these arcane and confusing options here:
// http://beust.com/weblog/2015/07/13/the-long-and-arduous-road-to-jcenter-and-maven-bliss/
def clarifai = [
  orgName: "Clarifai",
  description: "Clarifai Java API Client",
  github: "https://github.com/Clarifai/clarifai-java",
]

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadoc(type: Javadoc, overwrite: true) {
  source = sourceSets.main.allSource
  classpath += configurations.compile + configurations.compileOnly
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  //noinspection GroovyAccessibility
  from javadoc.destinationDir
}

artifacts {
  archives jar
  archives sourcesJar
}

publishing{
    publications{
        release(MavenPublication){
            from components.java
            groupId project.group
            artifactId 'clarifai-grpc'
            version project.version
            artifact javadocJar
            artifact sourcesJar

            pom {
                name = 'ClarifaiGrpc'
                description = 'Clarifai Java gRPC Client'
                url = "https://github.com/Clarifai/clarifai-java-grpc"
                inceptionYear = "2021"

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = "https://github.com/Clarifai/clarifai-java-grpc"
                    connection = "https://github.com/Clarifai/clarifai-java-grpc.git"
                }
                developers {
                    developer {
                        name = "Clarifai, Inc."
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}