// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/auth/scope/scope.proto

package com.clarifai.grpc.auth.scope;

/**
 * <pre>
 * Next index: 41
 * NOTE: When updating the list of "clarifai_exposed" scopes, please also
 * update the TestScopes function in main_key_test.go and TestGetExposedScopes function in
 * scope_test.go
 * The dependencies listed for each scope are simply recommendations so that a user
 * cannot make a key that would be useless. Beyond the key creation they are not enforced
 * but rather the scopes are enforce when data is accessed.
 * There is the following conventions in place, make sure you add them to the scopes for all new
 * resource types:
 * 1. *_Add requires the corresponding _Get.
 * 2. *_Delete requires the corresponding _Add and _Get.
 * 3. *_Patch is deprecated and not check anywhere.
 * Think of the dependencies in this file at the DB level. If you cannot make a DB call to Get, Add
 * or Delete a resource without having access to another resource then you should add it here. That
 * should for the most part be the same resource type. In service.proto for the API level you will
 * also specify cl_depending_scopes for each API endpoint. Those cover cases where an endpoint
 * might need to access more than just that one resource type in order to operate (ie. API handlers
 * that make multiple DB calls of various resource types likely have more cl_depending_scopes than
 * the ones listed below). For example: PostCollectors to create a collector we make sure that you
 * can do model predictions, get concepts, etc. so that you don't have a collector that would be
 * useless at the end of that API handler but below you can see that the dependencies of Collector
 * scopes are only on other Collector scopes.
 * </pre>
 *
 * Protobuf enum {@code clarifai.auth.scope.S}
 */
public enum S
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * introduce undef so that the zero (default/unset) value of the enum is not a real
   * permission.  undef is only present for this purpose and should not be used
   * to indicate any "real" value.
   * </pre>
   *
   * <code>undef = 0;</code>
   */
  undef(0),
  /**
   * <code>All = 1 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  All(1),
  /**
   * <pre>
   * Make an rpc to our prediction services.
   * </pre>
   *
   * <code>Predict = 2 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Predict(2),
  /**
   * <pre>
   * Write to the inputs table in the DB.
   * </pre>
   *
   * <code>Inputs_Add = 4 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Get];</code>
   */
  Inputs_Add(4),
  /**
   * <pre>
   * Read from the inputs table in the DB.
   * </pre>
   *
   * <code>Inputs_Get = 5 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Inputs_Get(5),
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated.
   * Optionally needs Concepts_Add.
   * </pre>
   *
   * <code>Inputs_Patch = 7 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Get];</code>
   */
  @java.lang.Deprecated
  Inputs_Patch(7),
  /**
   * <pre>
   * To delete we need read/write
   * </pre>
   *
   * <code>Inputs_Delete = 8 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Get];</code>
   */
  Inputs_Delete(8),
  /**
   * <pre>
   * Deprecated.
   * </pre>
   *
   * <code>Outputs_Patch = 9 [deprecated = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Predict];</code>
   */
  @java.lang.Deprecated
  Outputs_Patch(9),
  /**
   * <pre>
   * Write to the concepts DB tables.
   * </pre>
   *
   * <code>Concepts_Add = 10 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Get];</code>
   */
  Concepts_Add(10),
  /**
   * <pre>
   * Read from the concepts DB tables.
   * </pre>
   *
   * <code>Concepts_Get = 11 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Concepts_Get(11),
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated
   * </pre>
   *
   * <code>Concepts_Patch = 12 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Get];</code>
   */
  @java.lang.Deprecated
  Concepts_Patch(12),
  /**
   * <pre>
   * To delete we need read/write.
   * Note: not implemented.
   * </pre>
   *
   * <code>Concepts_Delete = 13 [(.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Get];</code>
   */
  Concepts_Delete(13),
  /**
   * <pre>
   * Write to the models DB tables.
   * </pre>
   *
   * <code>Models_Add = 14 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  Models_Add(14),
  /**
   * <pre>
   * Read from the models and models versions DB tables.
   * </pre>
   *
   * <code>Models_Get = 15 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Models_Get(15),
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated.
   * </pre>
   *
   * <code>Models_Patch = 16 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Train];</code>
   */
  @java.lang.Deprecated
  Models_Patch(16),
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Models_Delete = 17 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  Models_Delete(17),
  /**
   * <pre>
   * Note: Models_Train is effectively doing POST /models/{models_id}/versions so it's treated that
   * way in terms of data access under the hood.
   * Write to the model versions DB table.
   * </pre>
   *
   * <code>Models_Train = 26 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  Models_Train(26),
  /**
   * <pre>
   * Internal only model syncing.
   * </pre>
   *
   * <code>Models_Sync = 27 [(.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  Models_Sync(27),
  /**
   * <pre>
   * To get model version export
   * </pre>
   *
   * <code>ModelExports_Get = 142 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  ModelExports_Get(142),
  /**
   * <pre>
   * To create model version export
   * </pre>
   *
   * <code>ModelExports_Add = 143 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = ModelExports_Get];</code>
   */
  ModelExports_Add(143),
  /**
   * <pre>
   * To pull the model version's image
   * </pre>
   *
   * <code>Models_Pull = 150 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  Models_Pull(150),
  /**
   * <pre>
   * Write to the workflows DB table.
   * </pre>
   *
   * <code>Workflows_Add = 18 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Get];</code>
   */
  Workflows_Add(18),
  /**
   * <pre>
   * Read from the workflows DB table.
   * </pre>
   *
   * <code>Workflows_Get = 19 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Workflows_Get(19),
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated.
   * </pre>
   *
   * <code>Workflows_Patch = 20 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Get];</code>
   */
  @java.lang.Deprecated
  Workflows_Patch(20),
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Workflows_Delete = 21 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Get];</code>
   */
  Workflows_Delete(21),
  /**
   * <code>WorkflowMetrics_Get = 96 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  WorkflowMetrics_Get(96),
  /**
   * <code>WorkflowMetrics_Add = 97 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = WorkflowMetrics_Get];</code>
   */
  WorkflowMetrics_Add(97),
  /**
   * <code>WorkflowMetrics_Delete = 98 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = WorkflowMetrics_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = WorkflowMetrics_Get];</code>
   */
  WorkflowMetrics_Delete(98),
  /**
   * <pre>
   * Write to the visualizations DB table.
   * Deprecated
   * </pre>
   *
   * <code>TSNEVisualizations_Add = 24 [deprecated = true, (.clarifai.auth.scope.clarifai_depending_scopes) = TSNEVisualizations_Get];</code>
   */
  @java.lang.Deprecated
  TSNEVisualizations_Add(24),
  /**
   * <pre>
   * Read from the visualizations DB table.
   * Deprecated
   * </pre>
   *
   * <code>TSNEVisualizations_Get = 25 [deprecated = true];</code>
   */
  @java.lang.Deprecated
  TSNEVisualizations_Get(25),
  /**
   * <pre>
   * Write to the annotations DB table.
   * </pre>
   *
   * <code>Annotations_Add = 37 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Get];</code>
   */
  Annotations_Add(37),
  /**
   * <pre>
   * Read from the annotations DB table.
   * </pre>
   *
   * <code>Annotations_Get = 38 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Annotations_Get(38),
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated.
   * </pre>
   *
   * <code>Annotations_Patch = 39 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Get];</code>
   */
  @java.lang.Deprecated
  Annotations_Patch(39),
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Annotations_Delete = 40 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Get];</code>
   */
  Annotations_Delete(40),
  /**
   * <pre>
   * Write to the collectors DB table.
   * </pre>
   *
   * <code>Collectors_Add = 41 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Collectors_Get];</code>
   */
  Collectors_Add(41),
  /**
   * <pre>
   * Read from the collectors DB table.
   * </pre>
   *
   * <code>Collectors_Get = 42 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Collectors_Get(42),
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Collectors_Delete = 43 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Collectors_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Collectors_Get];</code>
   */
  Collectors_Delete(43),
  /**
   * <pre>
   * Write to the apps DB table.
   * </pre>
   *
   * <code>Apps_Add = 44 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Apps_Get];</code>
   */
  Apps_Add(44),
  /**
   * <pre>
   * Read from the apps DB table.
   * </pre>
   *
   * <code>Apps_Get = 45 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Apps_Get(45),
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Apps_Delete = 46 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Apps_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Apps_Get];</code>
   */
  Apps_Delete(46),
  /**
   * <pre>
   * Write to the keys DB table.
   * </pre>
   *
   * <code>Keys_Add = 47 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Keys_Get];</code>
   */
  Keys_Add(47),
  /**
   * <pre>
   * Read from the keys DB table.
   * </pre>
   *
   * <code>Keys_Get = 48 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Keys_Get(48),
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Keys_Delete = 49 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Keys_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Keys_Get];</code>
   */
  Keys_Delete(49),
  /**
   * <pre>
   * Write to the app sharing DB table
   * </pre>
   *
   * <code>Collaborators_Add = 51 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Collaborators_Get];</code>
   */
  Collaborators_Add(51),
  /**
   * <pre>
   * Read from the app sharing DB table
   * </pre>
   *
   * <code>Collaborators_Get = 50 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Collaborators_Get(50),
  /**
   * <pre>
   * To delete we need read/write
   * </pre>
   *
   * <code>Collaborators_Delete = 52 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Collaborators_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Collaborators_Get];</code>
   */
  Collaborators_Delete(52),
  /**
   * <pre>
   * Write to the metrics table
   * </pre>
   *
   * <code>Metrics_Add = 54 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Metrics_Get];</code>
   */
  Metrics_Add(54),
  /**
   * <pre>
   * Read from metrics table
   * </pre>
   *
   * <code>Metrics_Get = 53 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Metrics_Get(53),
  /**
   * <pre>
   * To delete we need read/write
   * </pre>
   *
   * <code>Metrics_Delete = 63 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Metrics_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Metrics_Get];</code>
   */
  Metrics_Delete(63),
  /**
   * <pre>
   * Write to tasks DB table.
   * </pre>
   *
   * <code>Tasks_Add = 55 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Tasks_Get];</code>
   */
  Tasks_Add(55),
  /**
   * <pre>
   * Read from the tasks DB table.
   * </pre>
   *
   * <code>Tasks_Get = 56 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Tasks_Get(56),
  /**
   * <pre>
   * To delete we need read/write
   * </pre>
   *
   * <code>Tasks_Delete = 70 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Tasks_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Tasks_Get];</code>
   */
  Tasks_Delete(70),
  /**
   * <pre>
   * Write to the password_policies DB table
   * </pre>
   *
   * <code>PasswordPolicies_Add = 57 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = PasswordPolicies_Get];</code>
   */
  PasswordPolicies_Add(57),
  /**
   * <pre>
   * Read from the password_policies DB table
   * </pre>
   *
   * <code>PasswordPolicies_Get = 58 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  PasswordPolicies_Get(58),
  /**
   * <pre>
   * To delete password_policies we need read/write
   * </pre>
   *
   * <code>PasswordPolicies_Delete = 59 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = PasswordPolicies_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = PasswordPolicies_Get];</code>
   */
  PasswordPolicies_Delete(59),
  /**
   * <pre>
   * Read from label orders table
   * </pre>
   *
   * <code>LabelOrders_Get = 67 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  LabelOrders_Get(67),
  /**
   * <pre>
   * Write to label orders table
   * </pre>
   *
   * <code>LabelOrders_Add = 68 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = LabelOrders_Get];</code>
   */
  LabelOrders_Add(68),
  /**
   * <pre>
   * To delete label orders we need read/write
   * </pre>
   *
   * <code>LabelOrders_Delete = 69 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = LabelOrders_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = LabelOrders_Get];</code>
   */
  LabelOrders_Delete(69),
  /**
   * <pre>
   * CRUD on FindDuplicateAnnotationsJobs table
   * </pre>
   *
   * <code>FindDuplicateAnnotationsJobs_Add = 102 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = FindDuplicateAnnotationsJobs_Get];</code>
   */
  FindDuplicateAnnotationsJobs_Add(102),
  /**
   * <code>FindDuplicateAnnotationsJobs_Get = 103 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  FindDuplicateAnnotationsJobs_Get(103),
  /**
   * <code>FindDuplicateAnnotationsJobs_Delete = 104 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = FindDuplicateAnnotationsJobs_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = FindDuplicateAnnotationsJobs_Get];</code>
   */
  FindDuplicateAnnotationsJobs_Delete(104),
  /**
   * <code>Datasets_Get = 105 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Datasets_Get(105),
  /**
   * <code>Datasets_Add = 106 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Datasets_Get];</code>
   */
  Datasets_Add(106),
  /**
   * <code>Datasets_Delete = 107 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Datasets_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Datasets_Add];</code>
   */
  Datasets_Delete(107),
  /**
   * <pre>
   * Write to the modules DB tables.
   * </pre>
   *
   * <code>Modules_Add = 108 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  Modules_Add(108),
  /**
   * <pre>
   * Read from the modules and modules versions DB tables.
   * </pre>
   *
   * <code>Modules_Get = 109 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Modules_Get(109),
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Modules_Delete = 110 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  Modules_Delete(110),
  /**
   * <pre>
   * Write to the InstalledModuleVersions DB tables.
   * </pre>
   *
   * <code>InstalledModuleVersions_Add = 111 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = InstalledModuleVersions_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  InstalledModuleVersions_Add(111),
  /**
   * <pre>
   * Read from the InstalledModuleVersions and InstalledModuleVersions versions DB tables.
   * </pre>
   *
   * <code>InstalledModuleVersions_Get = 112 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  InstalledModuleVersions_Get(112),
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>InstalledModuleVersions_Delete = 113 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = InstalledModuleVersions_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = InstalledModuleVersions_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  InstalledModuleVersions_Delete(113),
  /**
   * <pre>
   * Make an rpc to our search services.
   * </pre>
   *
   * <code>Search = 3 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Search(3),
  /**
   * <pre>
   * To get a saved search.
   * </pre>
   *
   * <code>SavedSearch_Get = 114 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  SavedSearch_Get(114),
  /**
   * <pre>
   * To add a saved search
   * </pre>
   *
   * <code>SavedSearch_Add = 115 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = SavedSearch_Get];</code>
   */
  SavedSearch_Add(115),
  /**
   * <pre>
   * To delete a saved search
   * </pre>
   *
   * <code>SavedSearch_Delete = 116 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = SavedSearch_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = SavedSearch_Add];</code>
   */
  SavedSearch_Delete(116),
  /**
   * <code>ModelVersionPublications_Add = 117 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  ModelVersionPublications_Add(117),
  /**
   * <code>ModelVersionPublications_Delete = 118 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  ModelVersionPublications_Delete(118),
  /**
   * <code>WorkflowPublications_Add = 119 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  WorkflowPublications_Add(119),
  /**
   * <code>WorkflowPublications_Delete = 120 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  WorkflowPublications_Delete(120),
  /**
   * <pre>
   * To write bulk operations to the DB
   * </pre>
   *
   * <code>BulkOperation_Add = 121 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = BulkOperation_Get];</code>
   */
  BulkOperation_Add(121),
  /**
   * <pre>
   * To Read Bulk Operations from the DB
   * </pre>
   *
   * <code>BulkOperation_Get = 122 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  BulkOperation_Get(122),
  /**
   * <pre>
   * To Delete Bulk Operations from the DB
   * </pre>
   *
   * <code>BulkOperation_Delete = 123 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = BulkOperation_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = BulkOperation_Get];</code>
   */
  BulkOperation_Delete(123),
  /**
   * <pre>
   * To read historical usage from usage.dashboard_items table
   * </pre>
   *
   * <code>HistoricalUsage_Get = 124;</code>
   */
  HistoricalUsage_Get(124),
  /**
   * <pre>
   * To read uploaded files and archives info from Uploads endpoints
   * </pre>
   *
   * <code>Uploads_Get = 128 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Uploads_Get(128),
  /**
   * <pre>
   * To upload files or archives through the Uploads endpoints
   * </pre>
   *
   * <code>Uploads_Add = 129 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Uploads_Get];</code>
   */
  Uploads_Add(129),
  /**
   * <code>Uploads_Delete = 130 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Uploads_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Uploads_Add];</code>
   */
  Uploads_Delete(130),
  /**
   * <pre>
   * To control remote runners
   * </pre>
   *
   * <code>Runners_Get = 131 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Runners_Get(131),
  /**
   * <code>Runners_Add = 132 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Runners_Get];</code>
   */
  Runners_Add(132),
  /**
   * <code>Runners_Delete = 133 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Runners_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Runners_Add];</code>
   */
  Runners_Delete(133),
  /**
   * <code>RunnerItems_Get = 134 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  RunnerItems_Get(134),
  /**
   * <code>RunnerItems_Add = 135 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = RunnerItems_Get];</code>
   */
  RunnerItems_Add(135),
  /**
   * <pre>
   * Pools of compute resources.
   * </pre>
   *
   * <code>Nodepools_Get = 136 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Nodepools_Get(136),
  /**
   * <code>Nodepools_Add = 137 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Nodepools_Get];</code>
   */
  Nodepools_Add(137),
  /**
   * <code>Nodepools_Delete = 138 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Nodepools_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Nodepools_Add];</code>
   */
  Nodepools_Delete(138),
  /**
   * <pre>
   * Cluster of machines in a region of cloud
   * </pre>
   *
   * <code>ComputeClusters_Get = 139 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  ComputeClusters_Get(139),
  /**
   * <code>ComputeClusters_Add = 140 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = ComputeClusters_Get];</code>
   */
  ComputeClusters_Add(140),
  /**
   * <code>ComputeClusters_Delete = 141 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = ComputeClusters_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = ComputeClusters_Add];</code>
   */
  ComputeClusters_Delete(141),
  /**
   * <pre>
   * How to autoscale resources within nodepools.
   * </pre>
   *
   * <code>Deployments_Get = 144 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Deployments_Get(144),
  /**
   * <code>Deployments_Add = 145 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Deployments_Get];</code>
   */
  Deployments_Add(145),
  /**
   * <code>Deployments_Delete = 146 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Deployments_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Deployments_Add];</code>
   */
  Deployments_Delete(146),
  /**
   * <code>InstanceTypes_Get = 148 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  InstanceTypes_Get(148),
  /**
   * <code>AuditLogs_Get = 149 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  AuditLogs_Get(149),
  /**
   * <code>LogEntries_Get = 151 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  LogEntries_Get(151),
  /**
   * <code>WorkflowVersionEvaluations_Get = 152 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  WorkflowVersionEvaluations_Get(152),
  /**
   * <code>WorkflowVersionEvaluations_Add = 153 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = WorkflowVersionEvaluations_Get];</code>
   */
  WorkflowVersionEvaluations_Add(153),
  /**
   * <code>Pipeline_Get = 154 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  Pipeline_Get(154),
  /**
   * <code>Pipeline_Add = 155 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Pipeline_Get];</code>
   */
  Pipeline_Add(155),
  /**
   * <code>PipelineStep_Get = 157 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  PipelineStep_Get(157),
  /**
   * <code>PipelineStep_Add = 158 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = PipelineStep_Get];</code>
   */
  PipelineStep_Add(158),
  /**
   * <pre>
   * To pull the pipeline step version's image
   * </pre>
   *
   * <code>PipelineStep_Pull = 159 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = PipelineStep_Get];</code>
   */
  PipelineStep_Pull(159),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * introduce undef so that the zero (default/unset) value of the enum is not a real
   * permission.  undef is only present for this purpose and should not be used
   * to indicate any "real" value.
   * </pre>
   *
   * <code>undef = 0;</code>
   */
  public static final int undef_VALUE = 0;
  /**
   * <code>All = 1 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int All_VALUE = 1;
  /**
   * <pre>
   * Make an rpc to our prediction services.
   * </pre>
   *
   * <code>Predict = 2 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Predict_VALUE = 2;
  /**
   * <pre>
   * Write to the inputs table in the DB.
   * </pre>
   *
   * <code>Inputs_Add = 4 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Get];</code>
   */
  public static final int Inputs_Add_VALUE = 4;
  /**
   * <pre>
   * Read from the inputs table in the DB.
   * </pre>
   *
   * <code>Inputs_Get = 5 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Inputs_Get_VALUE = 5;
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated.
   * Optionally needs Concepts_Add.
   * </pre>
   *
   * <code>Inputs_Patch = 7 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Get];</code>
   */
  @java.lang.Deprecated public static final int Inputs_Patch_VALUE = 7;
  /**
   * <pre>
   * To delete we need read/write
   * </pre>
   *
   * <code>Inputs_Delete = 8 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Get];</code>
   */
  public static final int Inputs_Delete_VALUE = 8;
  /**
   * <pre>
   * Deprecated.
   * </pre>
   *
   * <code>Outputs_Patch = 9 [deprecated = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Inputs_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Predict];</code>
   */
  @java.lang.Deprecated public static final int Outputs_Patch_VALUE = 9;
  /**
   * <pre>
   * Write to the concepts DB tables.
   * </pre>
   *
   * <code>Concepts_Add = 10 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Get];</code>
   */
  public static final int Concepts_Add_VALUE = 10;
  /**
   * <pre>
   * Read from the concepts DB tables.
   * </pre>
   *
   * <code>Concepts_Get = 11 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Concepts_Get_VALUE = 11;
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated
   * </pre>
   *
   * <code>Concepts_Patch = 12 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Get];</code>
   */
  @java.lang.Deprecated public static final int Concepts_Patch_VALUE = 12;
  /**
   * <pre>
   * To delete we need read/write.
   * Note: not implemented.
   * </pre>
   *
   * <code>Concepts_Delete = 13 [(.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Concepts_Get];</code>
   */
  public static final int Concepts_Delete_VALUE = 13;
  /**
   * <pre>
   * Write to the models DB tables.
   * </pre>
   *
   * <code>Models_Add = 14 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  public static final int Models_Add_VALUE = 14;
  /**
   * <pre>
   * Read from the models and models versions DB tables.
   * </pre>
   *
   * <code>Models_Get = 15 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Models_Get_VALUE = 15;
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated.
   * </pre>
   *
   * <code>Models_Patch = 16 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Train];</code>
   */
  @java.lang.Deprecated public static final int Models_Patch_VALUE = 16;
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Models_Delete = 17 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  public static final int Models_Delete_VALUE = 17;
  /**
   * <pre>
   * Note: Models_Train is effectively doing POST /models/{models_id}/versions so it's treated that
   * way in terms of data access under the hood.
   * Write to the model versions DB table.
   * </pre>
   *
   * <code>Models_Train = 26 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  public static final int Models_Train_VALUE = 26;
  /**
   * <pre>
   * Internal only model syncing.
   * </pre>
   *
   * <code>Models_Sync = 27 [(.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  public static final int Models_Sync_VALUE = 27;
  /**
   * <pre>
   * To get model version export
   * </pre>
   *
   * <code>ModelExports_Get = 142 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int ModelExports_Get_VALUE = 142;
  /**
   * <pre>
   * To create model version export
   * </pre>
   *
   * <code>ModelExports_Add = 143 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = ModelExports_Get];</code>
   */
  public static final int ModelExports_Add_VALUE = 143;
  /**
   * <pre>
   * To pull the model version's image
   * </pre>
   *
   * <code>Models_Pull = 150 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Models_Get];</code>
   */
  public static final int Models_Pull_VALUE = 150;
  /**
   * <pre>
   * Write to the workflows DB table.
   * </pre>
   *
   * <code>Workflows_Add = 18 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Get];</code>
   */
  public static final int Workflows_Add_VALUE = 18;
  /**
   * <pre>
   * Read from the workflows DB table.
   * </pre>
   *
   * <code>Workflows_Get = 19 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Workflows_Get_VALUE = 19;
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated.
   * </pre>
   *
   * <code>Workflows_Patch = 20 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Get];</code>
   */
  @java.lang.Deprecated public static final int Workflows_Patch_VALUE = 20;
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Workflows_Delete = 21 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Workflows_Get];</code>
   */
  public static final int Workflows_Delete_VALUE = 21;
  /**
   * <code>WorkflowMetrics_Get = 96 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int WorkflowMetrics_Get_VALUE = 96;
  /**
   * <code>WorkflowMetrics_Add = 97 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = WorkflowMetrics_Get];</code>
   */
  public static final int WorkflowMetrics_Add_VALUE = 97;
  /**
   * <code>WorkflowMetrics_Delete = 98 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = WorkflowMetrics_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = WorkflowMetrics_Get];</code>
   */
  public static final int WorkflowMetrics_Delete_VALUE = 98;
  /**
   * <pre>
   * Write to the visualizations DB table.
   * Deprecated
   * </pre>
   *
   * <code>TSNEVisualizations_Add = 24 [deprecated = true, (.clarifai.auth.scope.clarifai_depending_scopes) = TSNEVisualizations_Get];</code>
   */
  @java.lang.Deprecated public static final int TSNEVisualizations_Add_VALUE = 24;
  /**
   * <pre>
   * Read from the visualizations DB table.
   * Deprecated
   * </pre>
   *
   * <code>TSNEVisualizations_Get = 25 [deprecated = true];</code>
   */
  @java.lang.Deprecated public static final int TSNEVisualizations_Get_VALUE = 25;
  /**
   * <pre>
   * Write to the annotations DB table.
   * </pre>
   *
   * <code>Annotations_Add = 37 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Get];</code>
   */
  public static final int Annotations_Add_VALUE = 37;
  /**
   * <pre>
   * Read from the annotations DB table.
   * </pre>
   *
   * <code>Annotations_Get = 38 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Annotations_Get_VALUE = 38;
  /**
   * <pre>
   * To patch we need read/write.
   * Deprecated.
   * </pre>
   *
   * <code>Annotations_Patch = 39 [deprecated = true, (.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Get];</code>
   */
  @java.lang.Deprecated public static final int Annotations_Patch_VALUE = 39;
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Annotations_Delete = 40 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Annotations_Get];</code>
   */
  public static final int Annotations_Delete_VALUE = 40;
  /**
   * <pre>
   * Write to the collectors DB table.
   * </pre>
   *
   * <code>Collectors_Add = 41 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Collectors_Get];</code>
   */
  public static final int Collectors_Add_VALUE = 41;
  /**
   * <pre>
   * Read from the collectors DB table.
   * </pre>
   *
   * <code>Collectors_Get = 42 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Collectors_Get_VALUE = 42;
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Collectors_Delete = 43 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Collectors_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Collectors_Get];</code>
   */
  public static final int Collectors_Delete_VALUE = 43;
  /**
   * <pre>
   * Write to the apps DB table.
   * </pre>
   *
   * <code>Apps_Add = 44 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Apps_Get];</code>
   */
  public static final int Apps_Add_VALUE = 44;
  /**
   * <pre>
   * Read from the apps DB table.
   * </pre>
   *
   * <code>Apps_Get = 45 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Apps_Get_VALUE = 45;
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Apps_Delete = 46 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Apps_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Apps_Get];</code>
   */
  public static final int Apps_Delete_VALUE = 46;
  /**
   * <pre>
   * Write to the keys DB table.
   * </pre>
   *
   * <code>Keys_Add = 47 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Keys_Get];</code>
   */
  public static final int Keys_Add_VALUE = 47;
  /**
   * <pre>
   * Read from the keys DB table.
   * </pre>
   *
   * <code>Keys_Get = 48 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Keys_Get_VALUE = 48;
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Keys_Delete = 49 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Keys_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Keys_Get];</code>
   */
  public static final int Keys_Delete_VALUE = 49;
  /**
   * <pre>
   * Write to the app sharing DB table
   * </pre>
   *
   * <code>Collaborators_Add = 51 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Collaborators_Get];</code>
   */
  public static final int Collaborators_Add_VALUE = 51;
  /**
   * <pre>
   * Read from the app sharing DB table
   * </pre>
   *
   * <code>Collaborators_Get = 50 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Collaborators_Get_VALUE = 50;
  /**
   * <pre>
   * To delete we need read/write
   * </pre>
   *
   * <code>Collaborators_Delete = 52 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Collaborators_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Collaborators_Get];</code>
   */
  public static final int Collaborators_Delete_VALUE = 52;
  /**
   * <pre>
   * Write to the metrics table
   * </pre>
   *
   * <code>Metrics_Add = 54 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Metrics_Get];</code>
   */
  public static final int Metrics_Add_VALUE = 54;
  /**
   * <pre>
   * Read from metrics table
   * </pre>
   *
   * <code>Metrics_Get = 53 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Metrics_Get_VALUE = 53;
  /**
   * <pre>
   * To delete we need read/write
   * </pre>
   *
   * <code>Metrics_Delete = 63 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Metrics_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Metrics_Get];</code>
   */
  public static final int Metrics_Delete_VALUE = 63;
  /**
   * <pre>
   * Write to tasks DB table.
   * </pre>
   *
   * <code>Tasks_Add = 55 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Tasks_Get];</code>
   */
  public static final int Tasks_Add_VALUE = 55;
  /**
   * <pre>
   * Read from the tasks DB table.
   * </pre>
   *
   * <code>Tasks_Get = 56 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Tasks_Get_VALUE = 56;
  /**
   * <pre>
   * To delete we need read/write
   * </pre>
   *
   * <code>Tasks_Delete = 70 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Tasks_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Tasks_Get];</code>
   */
  public static final int Tasks_Delete_VALUE = 70;
  /**
   * <pre>
   * Write to the password_policies DB table
   * </pre>
   *
   * <code>PasswordPolicies_Add = 57 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = PasswordPolicies_Get];</code>
   */
  public static final int PasswordPolicies_Add_VALUE = 57;
  /**
   * <pre>
   * Read from the password_policies DB table
   * </pre>
   *
   * <code>PasswordPolicies_Get = 58 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int PasswordPolicies_Get_VALUE = 58;
  /**
   * <pre>
   * To delete password_policies we need read/write
   * </pre>
   *
   * <code>PasswordPolicies_Delete = 59 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = PasswordPolicies_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = PasswordPolicies_Get];</code>
   */
  public static final int PasswordPolicies_Delete_VALUE = 59;
  /**
   * <pre>
   * Read from label orders table
   * </pre>
   *
   * <code>LabelOrders_Get = 67 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int LabelOrders_Get_VALUE = 67;
  /**
   * <pre>
   * Write to label orders table
   * </pre>
   *
   * <code>LabelOrders_Add = 68 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = LabelOrders_Get];</code>
   */
  public static final int LabelOrders_Add_VALUE = 68;
  /**
   * <pre>
   * To delete label orders we need read/write
   * </pre>
   *
   * <code>LabelOrders_Delete = 69 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = LabelOrders_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = LabelOrders_Get];</code>
   */
  public static final int LabelOrders_Delete_VALUE = 69;
  /**
   * <pre>
   * CRUD on FindDuplicateAnnotationsJobs table
   * </pre>
   *
   * <code>FindDuplicateAnnotationsJobs_Add = 102 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = FindDuplicateAnnotationsJobs_Get];</code>
   */
  public static final int FindDuplicateAnnotationsJobs_Add_VALUE = 102;
  /**
   * <code>FindDuplicateAnnotationsJobs_Get = 103 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int FindDuplicateAnnotationsJobs_Get_VALUE = 103;
  /**
   * <code>FindDuplicateAnnotationsJobs_Delete = 104 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = FindDuplicateAnnotationsJobs_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = FindDuplicateAnnotationsJobs_Get];</code>
   */
  public static final int FindDuplicateAnnotationsJobs_Delete_VALUE = 104;
  /**
   * <code>Datasets_Get = 105 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Datasets_Get_VALUE = 105;
  /**
   * <code>Datasets_Add = 106 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Datasets_Get];</code>
   */
  public static final int Datasets_Add_VALUE = 106;
  /**
   * <code>Datasets_Delete = 107 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Datasets_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Datasets_Add];</code>
   */
  public static final int Datasets_Delete_VALUE = 107;
  /**
   * <pre>
   * Write to the modules DB tables.
   * </pre>
   *
   * <code>Modules_Add = 108 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  public static final int Modules_Add_VALUE = 108;
  /**
   * <pre>
   * Read from the modules and modules versions DB tables.
   * </pre>
   *
   * <code>Modules_Get = 109 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Modules_Get_VALUE = 109;
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>Modules_Delete = 110 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  public static final int Modules_Delete_VALUE = 110;
  /**
   * <pre>
   * Write to the InstalledModuleVersions DB tables.
   * </pre>
   *
   * <code>InstalledModuleVersions_Add = 111 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = InstalledModuleVersions_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  public static final int InstalledModuleVersions_Add_VALUE = 111;
  /**
   * <pre>
   * Read from the InstalledModuleVersions and InstalledModuleVersions versions DB tables.
   * </pre>
   *
   * <code>InstalledModuleVersions_Get = 112 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  public static final int InstalledModuleVersions_Get_VALUE = 112;
  /**
   * <pre>
   * To delete we need read/write.
   * </pre>
   *
   * <code>InstalledModuleVersions_Delete = 113 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = InstalledModuleVersions_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = InstalledModuleVersions_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Modules_Get];</code>
   */
  public static final int InstalledModuleVersions_Delete_VALUE = 113;
  /**
   * <pre>
   * Make an rpc to our search services.
   * </pre>
   *
   * <code>Search = 3 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Search_VALUE = 3;
  /**
   * <pre>
   * To get a saved search.
   * </pre>
   *
   * <code>SavedSearch_Get = 114 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int SavedSearch_Get_VALUE = 114;
  /**
   * <pre>
   * To add a saved search
   * </pre>
   *
   * <code>SavedSearch_Add = 115 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = SavedSearch_Get];</code>
   */
  public static final int SavedSearch_Add_VALUE = 115;
  /**
   * <pre>
   * To delete a saved search
   * </pre>
   *
   * <code>SavedSearch_Delete = 116 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = SavedSearch_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = SavedSearch_Add];</code>
   */
  public static final int SavedSearch_Delete_VALUE = 116;
  /**
   * <code>ModelVersionPublications_Add = 117 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int ModelVersionPublications_Add_VALUE = 117;
  /**
   * <code>ModelVersionPublications_Delete = 118 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int ModelVersionPublications_Delete_VALUE = 118;
  /**
   * <code>WorkflowPublications_Add = 119 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int WorkflowPublications_Add_VALUE = 119;
  /**
   * <code>WorkflowPublications_Delete = 120 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int WorkflowPublications_Delete_VALUE = 120;
  /**
   * <pre>
   * To write bulk operations to the DB
   * </pre>
   *
   * <code>BulkOperation_Add = 121 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = BulkOperation_Get];</code>
   */
  public static final int BulkOperation_Add_VALUE = 121;
  /**
   * <pre>
   * To Read Bulk Operations from the DB
   * </pre>
   *
   * <code>BulkOperation_Get = 122 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int BulkOperation_Get_VALUE = 122;
  /**
   * <pre>
   * To Delete Bulk Operations from the DB
   * </pre>
   *
   * <code>BulkOperation_Delete = 123 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = BulkOperation_Add, (.clarifai.auth.scope.clarifai_depending_scopes) = BulkOperation_Get];</code>
   */
  public static final int BulkOperation_Delete_VALUE = 123;
  /**
   * <pre>
   * To read historical usage from usage.dashboard_items table
   * </pre>
   *
   * <code>HistoricalUsage_Get = 124;</code>
   */
  public static final int HistoricalUsage_Get_VALUE = 124;
  /**
   * <pre>
   * To read uploaded files and archives info from Uploads endpoints
   * </pre>
   *
   * <code>Uploads_Get = 128 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Uploads_Get_VALUE = 128;
  /**
   * <pre>
   * To upload files or archives through the Uploads endpoints
   * </pre>
   *
   * <code>Uploads_Add = 129 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Uploads_Get];</code>
   */
  public static final int Uploads_Add_VALUE = 129;
  /**
   * <code>Uploads_Delete = 130 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Uploads_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Uploads_Add];</code>
   */
  public static final int Uploads_Delete_VALUE = 130;
  /**
   * <pre>
   * To control remote runners
   * </pre>
   *
   * <code>Runners_Get = 131 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Runners_Get_VALUE = 131;
  /**
   * <code>Runners_Add = 132 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Runners_Get];</code>
   */
  public static final int Runners_Add_VALUE = 132;
  /**
   * <code>Runners_Delete = 133 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Runners_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Runners_Add];</code>
   */
  public static final int Runners_Delete_VALUE = 133;
  /**
   * <code>RunnerItems_Get = 134 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int RunnerItems_Get_VALUE = 134;
  /**
   * <code>RunnerItems_Add = 135 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = RunnerItems_Get];</code>
   */
  public static final int RunnerItems_Add_VALUE = 135;
  /**
   * <pre>
   * Pools of compute resources.
   * </pre>
   *
   * <code>Nodepools_Get = 136 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Nodepools_Get_VALUE = 136;
  /**
   * <code>Nodepools_Add = 137 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Nodepools_Get];</code>
   */
  public static final int Nodepools_Add_VALUE = 137;
  /**
   * <code>Nodepools_Delete = 138 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Nodepools_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Nodepools_Add];</code>
   */
  public static final int Nodepools_Delete_VALUE = 138;
  /**
   * <pre>
   * Cluster of machines in a region of cloud
   * </pre>
   *
   * <code>ComputeClusters_Get = 139 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int ComputeClusters_Get_VALUE = 139;
  /**
   * <code>ComputeClusters_Add = 140 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = ComputeClusters_Get];</code>
   */
  public static final int ComputeClusters_Add_VALUE = 140;
  /**
   * <code>ComputeClusters_Delete = 141 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = ComputeClusters_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = ComputeClusters_Add];</code>
   */
  public static final int ComputeClusters_Delete_VALUE = 141;
  /**
   * <pre>
   * How to autoscale resources within nodepools.
   * </pre>
   *
   * <code>Deployments_Get = 144 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Deployments_Get_VALUE = 144;
  /**
   * <code>Deployments_Add = 145 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Deployments_Get];</code>
   */
  public static final int Deployments_Add_VALUE = 145;
  /**
   * <code>Deployments_Delete = 146 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Deployments_Get, (.clarifai.auth.scope.clarifai_depending_scopes) = Deployments_Add];</code>
   */
  public static final int Deployments_Delete_VALUE = 146;
  /**
   * <code>InstanceTypes_Get = 148 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int InstanceTypes_Get_VALUE = 148;
  /**
   * <code>AuditLogs_Get = 149 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int AuditLogs_Get_VALUE = 149;
  /**
   * <code>LogEntries_Get = 151 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int LogEntries_Get_VALUE = 151;
  /**
   * <code>WorkflowVersionEvaluations_Get = 152 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int WorkflowVersionEvaluations_Get_VALUE = 152;
  /**
   * <code>WorkflowVersionEvaluations_Add = 153 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = WorkflowVersionEvaluations_Get];</code>
   */
  public static final int WorkflowVersionEvaluations_Add_VALUE = 153;
  /**
   * <code>Pipeline_Get = 154 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int Pipeline_Get_VALUE = 154;
  /**
   * <code>Pipeline_Add = 155 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = Pipeline_Get];</code>
   */
  public static final int Pipeline_Add_VALUE = 155;
  /**
   * <code>PipelineStep_Get = 157 [(.clarifai.auth.scope.clarfai_exposed) = true];</code>
   */
  public static final int PipelineStep_Get_VALUE = 157;
  /**
   * <code>PipelineStep_Add = 158 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = PipelineStep_Get];</code>
   */
  public static final int PipelineStep_Add_VALUE = 158;
  /**
   * <pre>
   * To pull the pipeline step version's image
   * </pre>
   *
   * <code>PipelineStep_Pull = 159 [(.clarifai.auth.scope.clarfai_exposed) = true, (.clarifai.auth.scope.clarifai_depending_scopes) = PipelineStep_Get];</code>
   */
  public static final int PipelineStep_Pull_VALUE = 159;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static S valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static S forNumber(int value) {
    switch (value) {
      case 0: return undef;
      case 1: return All;
      case 2: return Predict;
      case 4: return Inputs_Add;
      case 5: return Inputs_Get;
      case 7: return Inputs_Patch;
      case 8: return Inputs_Delete;
      case 9: return Outputs_Patch;
      case 10: return Concepts_Add;
      case 11: return Concepts_Get;
      case 12: return Concepts_Patch;
      case 13: return Concepts_Delete;
      case 14: return Models_Add;
      case 15: return Models_Get;
      case 16: return Models_Patch;
      case 17: return Models_Delete;
      case 26: return Models_Train;
      case 27: return Models_Sync;
      case 142: return ModelExports_Get;
      case 143: return ModelExports_Add;
      case 150: return Models_Pull;
      case 18: return Workflows_Add;
      case 19: return Workflows_Get;
      case 20: return Workflows_Patch;
      case 21: return Workflows_Delete;
      case 96: return WorkflowMetrics_Get;
      case 97: return WorkflowMetrics_Add;
      case 98: return WorkflowMetrics_Delete;
      case 24: return TSNEVisualizations_Add;
      case 25: return TSNEVisualizations_Get;
      case 37: return Annotations_Add;
      case 38: return Annotations_Get;
      case 39: return Annotations_Patch;
      case 40: return Annotations_Delete;
      case 41: return Collectors_Add;
      case 42: return Collectors_Get;
      case 43: return Collectors_Delete;
      case 44: return Apps_Add;
      case 45: return Apps_Get;
      case 46: return Apps_Delete;
      case 47: return Keys_Add;
      case 48: return Keys_Get;
      case 49: return Keys_Delete;
      case 51: return Collaborators_Add;
      case 50: return Collaborators_Get;
      case 52: return Collaborators_Delete;
      case 54: return Metrics_Add;
      case 53: return Metrics_Get;
      case 63: return Metrics_Delete;
      case 55: return Tasks_Add;
      case 56: return Tasks_Get;
      case 70: return Tasks_Delete;
      case 57: return PasswordPolicies_Add;
      case 58: return PasswordPolicies_Get;
      case 59: return PasswordPolicies_Delete;
      case 67: return LabelOrders_Get;
      case 68: return LabelOrders_Add;
      case 69: return LabelOrders_Delete;
      case 102: return FindDuplicateAnnotationsJobs_Add;
      case 103: return FindDuplicateAnnotationsJobs_Get;
      case 104: return FindDuplicateAnnotationsJobs_Delete;
      case 105: return Datasets_Get;
      case 106: return Datasets_Add;
      case 107: return Datasets_Delete;
      case 108: return Modules_Add;
      case 109: return Modules_Get;
      case 110: return Modules_Delete;
      case 111: return InstalledModuleVersions_Add;
      case 112: return InstalledModuleVersions_Get;
      case 113: return InstalledModuleVersions_Delete;
      case 3: return Search;
      case 114: return SavedSearch_Get;
      case 115: return SavedSearch_Add;
      case 116: return SavedSearch_Delete;
      case 117: return ModelVersionPublications_Add;
      case 118: return ModelVersionPublications_Delete;
      case 119: return WorkflowPublications_Add;
      case 120: return WorkflowPublications_Delete;
      case 121: return BulkOperation_Add;
      case 122: return BulkOperation_Get;
      case 123: return BulkOperation_Delete;
      case 124: return HistoricalUsage_Get;
      case 128: return Uploads_Get;
      case 129: return Uploads_Add;
      case 130: return Uploads_Delete;
      case 131: return Runners_Get;
      case 132: return Runners_Add;
      case 133: return Runners_Delete;
      case 134: return RunnerItems_Get;
      case 135: return RunnerItems_Add;
      case 136: return Nodepools_Get;
      case 137: return Nodepools_Add;
      case 138: return Nodepools_Delete;
      case 139: return ComputeClusters_Get;
      case 140: return ComputeClusters_Add;
      case 141: return ComputeClusters_Delete;
      case 144: return Deployments_Get;
      case 145: return Deployments_Add;
      case 146: return Deployments_Delete;
      case 148: return InstanceTypes_Get;
      case 149: return AuditLogs_Get;
      case 151: return LogEntries_Get;
      case 152: return WorkflowVersionEvaluations_Get;
      case 153: return WorkflowVersionEvaluations_Add;
      case 154: return Pipeline_Get;
      case 155: return Pipeline_Add;
      case 157: return PipelineStep_Get;
      case 158: return PipelineStep_Add;
      case 159: return PipelineStep_Pull;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<S>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      S> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<S>() {
          public S findValueByNumber(int number) {
            return S.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.clarifai.grpc.auth.scope.Scope.getDescriptor().getEnumTypes().get(0);
  }

  private static final S[] VALUES = values();

  public static S valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private S(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:clarifai.auth.scope.S)
}

