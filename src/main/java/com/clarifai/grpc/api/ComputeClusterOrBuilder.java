// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

public interface ComputeClusterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.ComputeCluster)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Short description of cluster region.
   * </pre>
   *
   * <code>string description = 2;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * Short description of cluster region.
   * </pre>
   *
   * <code>string description = 2;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <code>.clarifai.api.CloudProvider cloud_provider = 3;</code>
   * @return Whether the cloudProvider field is set.
   */
  boolean hasCloudProvider();
  /**
   * <code>.clarifai.api.CloudProvider cloud_provider = 3;</code>
   * @return The cloudProvider.
   */
  com.clarifai.grpc.api.CloudProvider getCloudProvider();
  /**
   * <code>.clarifai.api.CloudProvider cloud_provider = 3;</code>
   */
  com.clarifai.grpc.api.CloudProviderOrBuilder getCloudProviderOrBuilder();

  /**
   * <pre>
   * The region. The naming here depends on the cluster choice above and will be validated
   * against which clusters+regions that Clarifai currently supports.
   * </pre>
   *
   * <code>string region = 4;</code>
   * @return The region.
   */
  java.lang.String getRegion();
  /**
   * <pre>
   * The region. The naming here depends on the cluster choice above and will be validated
   * against which clusters+regions that Clarifai currently supports.
   * </pre>
   *
   * <code>string region = 4;</code>
   * @return The bytes for region.
   */
  com.google.protobuf.ByteString
      getRegionBytes();
}
