// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

/**
 * Protobuf enum {@code clarifai.api.TagCategoryName}
 */
public enum TagCategoryName
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>uncategorized = 0;</code>
   */
  uncategorized(0),
  /**
   * <pre>
   * ex. tags: "faces", "food", "misc"
   * </pre>
   *
   * <code>use_case = 1;</code>
   */
  use_case(1),
  /**
   * <pre>
   * ex. tags: "en", "ar", "fi"
   * </pre>
   *
   * <code>language = 2;</code>
   */
  language(2),
  /**
   * <pre>
   * ex. tags: "MIT", "Apache-2.0", "OSL"
   * </pre>
   *
   * <code>licence = 3;</code>
   */
  licence(3),
  /**
   * <pre>
   * ex. tags: “HuggingFace”, "Detectron2", "OpenMMLab"
   * </pre>
   *
   * <code>toolkit = 4;</code>
   */
  toolkit(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>uncategorized = 0;</code>
   */
  public static final int uncategorized_VALUE = 0;
  /**
   * <pre>
   * ex. tags: "faces", "food", "misc"
   * </pre>
   *
   * <code>use_case = 1;</code>
   */
  public static final int use_case_VALUE = 1;
  /**
   * <pre>
   * ex. tags: "en", "ar", "fi"
   * </pre>
   *
   * <code>language = 2;</code>
   */
  public static final int language_VALUE = 2;
  /**
   * <pre>
   * ex. tags: "MIT", "Apache-2.0", "OSL"
   * </pre>
   *
   * <code>licence = 3;</code>
   */
  public static final int licence_VALUE = 3;
  /**
   * <pre>
   * ex. tags: “HuggingFace”, "Detectron2", "OpenMMLab"
   * </pre>
   *
   * <code>toolkit = 4;</code>
   */
  public static final int toolkit_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TagCategoryName valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TagCategoryName forNumber(int value) {
    switch (value) {
      case 0: return uncategorized;
      case 1: return use_case;
      case 2: return language;
      case 3: return licence;
      case 4: return toolkit;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TagCategoryName>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TagCategoryName> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TagCategoryName>() {
          public TagCategoryName findValueByNumber(int number) {
            return TagCategoryName.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.clarifai.grpc.api.Resources.getDescriptor().getEnumTypes().get(10);
  }

  private static final TagCategoryName[] VALUES = values();

  public static TagCategoryName valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TagCategoryName(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:clarifai.api.TagCategoryName)
}

