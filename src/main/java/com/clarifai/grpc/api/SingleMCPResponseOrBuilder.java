// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/service.proto

package com.clarifai.grpc.api;

public interface SingleMCPResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.SingleMCPResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This is always "2.0"
   * </pre>
   *
   * <code>string jsonrpc = 1;</code>
   * @return The jsonrpc.
   */
  java.lang.String getJsonrpc();
  /**
   * <pre>
   * This is always "2.0"
   * </pre>
   *
   * <code>string jsonrpc = 1;</code>
   * @return The bytes for jsonrpc.
   */
  com.google.protobuf.ByteString
      getJsonrpcBytes();

  /**
   * <pre>
   * The id as an int. Note: the protocol says string | number. int64 becomes a string.
   * All clients tests so far are using numbers.
   * protobuf and grpc-gateway have no simple way to handle this OR in a type
   * if needed we can add another option to our jsonpb parser.
   * We have to return even empty (id=0) id.
   * </pre>
   *
   * <code>uint32 id = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   * @return The id.
   */
  int getId();

  /**
   * <pre>
   * The result of the call. Struct is used to represent a JSON object.
   * </pre>
   *
   * <code>.google.protobuf.Struct result = 3;</code>
   * @return Whether the result field is set.
   */
  boolean hasResult();
  /**
   * <pre>
   * The result of the call. Struct is used to represent a JSON object.
   * </pre>
   *
   * <code>.google.protobuf.Struct result = 3;</code>
   * @return The result.
   */
  com.google.protobuf.Struct getResult();
  /**
   * <pre>
   * The result of the call. Struct is used to represent a JSON object.
   * </pre>
   *
   * <code>.google.protobuf.Struct result = 3;</code>
   */
  com.google.protobuf.StructOrBuilder getResultOrBuilder();

  /**
   * <pre>
   * An error if returned from the MCP.
   * </pre>
   *
   * <code>.clarifai.api.MCPError error = 4;</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <pre>
   * An error if returned from the MCP.
   * </pre>
   *
   * <code>.clarifai.api.MCPError error = 4;</code>
   * @return The error.
   */
  com.clarifai.grpc.api.MCPError getError();
  /**
   * <pre>
   * An error if returned from the MCP.
   * </pre>
   *
   * <code>.clarifai.api.MCPError error = 4;</code>
   */
  com.clarifai.grpc.api.MCPErrorOrBuilder getErrorOrBuilder();

  /**
   * <pre>
   * Have to add this for our API validation but shouldn't be returned in most cases.
   * It may be filled in for Accepted or Allowed responses that are part of the protocol
   * but that didn't seem to be an issue.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 5;</code>
   * @return Whether the status field is set.
   */
  boolean hasStatus();
  /**
   * <pre>
   * Have to add this for our API validation but shouldn't be returned in most cases.
   * It may be filled in for Accepted or Allowed responses that are part of the protocol
   * but that didn't seem to be an issue.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 5;</code>
   * @return The status.
   */
  com.clarifai.grpc.api.status.Status getStatus();
  /**
   * <pre>
   * Have to add this for our API validation but shouldn't be returned in most cases.
   * It may be filled in for Accepted or Allowed responses that are part of the protocol
   * but that didn't seem to be an issue.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 5;</code>
   */
  com.clarifai.grpc.api.status.StatusOrBuilder getStatusOrBuilder();
}
