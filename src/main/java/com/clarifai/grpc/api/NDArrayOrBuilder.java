// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

public interface NDArrayOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.NDArray)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The bytes of data from the array from array.tobytes()
   * </pre>
   *
   * <code>bytes buffer = 1;</code>
   * @return The buffer.
   */
  com.google.protobuf.ByteString getBuffer();

  /**
   * <pre>
   * Simply the shape of the numpy array. array.shape.
   * </pre>
   *
   * <code>repeated uint32 shape = 2;</code>
   * @return A list containing the shape.
   */
  java.util.List<java.lang.Integer> getShapeList();
  /**
   * <pre>
   * Simply the shape of the numpy array. array.shape.
   * </pre>
   *
   * <code>repeated uint32 shape = 2;</code>
   * @return The count of shape.
   */
  int getShapeCount();
  /**
   * <pre>
   * Simply the shape of the numpy array. array.shape.
   * </pre>
   *
   * <code>repeated uint32 shape = 2;</code>
   * @param index The index of the element to return.
   * @return The shape at the given index.
   */
  int getShape(int index);

  /**
   * <pre>
   * Dtype for numpy. You can get it back from this string format using:
   * np.dtype('float32') for example.
   * </pre>
   *
   * <code>string dtype = 3;</code>
   * @return The dtype.
   */
  java.lang.String getDtype();
  /**
   * <pre>
   * Dtype for numpy. You can get it back from this string format using:
   * np.dtype('float32') for example.
   * </pre>
   *
   * <code>string dtype = 3;</code>
   * @return The bytes for dtype.
   */
  com.google.protobuf.ByteString
      getDtypeBytes();
}
