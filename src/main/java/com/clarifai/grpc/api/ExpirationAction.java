// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

/**
 * Protobuf enum {@code clarifai.api.ExpirationAction}
 */
public enum ExpirationAction
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>EXPIRATION_ACTION_NOT_SET = 0;</code>
   */
  EXPIRATION_ACTION_NOT_SET(0),
  /**
   * <pre>
   * Progressively delay the execution of operations
   * </pre>
   *
   * <code>DELAY = 1;</code>
   */
  DELAY(1),
  /**
   * <pre>
   * Cease functioning
   * </pre>
   *
   * <code>EXPIRY = 2;</code>
   */
  EXPIRY(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>EXPIRATION_ACTION_NOT_SET = 0;</code>
   */
  public static final int EXPIRATION_ACTION_NOT_SET_VALUE = 0;
  /**
   * <pre>
   * Progressively delay the execution of operations
   * </pre>
   *
   * <code>DELAY = 1;</code>
   */
  public static final int DELAY_VALUE = 1;
  /**
   * <pre>
   * Cease functioning
   * </pre>
   *
   * <code>EXPIRY = 2;</code>
   */
  public static final int EXPIRY_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ExpirationAction valueOf(int value) {
    return forNumber(value);
  }

  public static ExpirationAction forNumber(int value) {
    switch (value) {
      case 0: return EXPIRATION_ACTION_NOT_SET;
      case 1: return DELAY;
      case 2: return EXPIRY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ExpirationAction>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ExpirationAction> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ExpirationAction>() {
          public ExpirationAction findValueByNumber(int number) {
            return ExpirationAction.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.clarifai.grpc.api.Resources.getDescriptor().getEnumTypes().get(0);
  }

  private static final ExpirationAction[] VALUES = values();

  public static ExpirationAction valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ExpirationAction(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:clarifai.api.ExpirationAction)
}

