// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

public interface OutputConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.OutputConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * For custom concept model training: whether the concept predictions must sum to 1.
   * </pre>
   *
   * <code>bool concepts_mutually_exclusive = 1 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   * @return The conceptsMutuallyExclusive.
   */
  boolean getConceptsMutuallyExclusive();

  /**
   * <pre>
   * For custom concept model training: Whether negatives should only be sampled from within the app during
   * training, for custom models.
   * </pre>
   *
   * <code>bool closed_environment = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   * @return The closedEnvironment.
   */
  boolean getClosedEnvironment();

  /**
   * <pre>
   * DEPRECATED: For custom models, this is the base model to use for image embeddings.
   * Default is general model.
   * </pre>
   *
   * <code>string existing_model_id = 3 [deprecated = true];</code>
   * @return The existingModelId.
   */
  @java.lang.Deprecated java.lang.String getExistingModelId();
  /**
   * <pre>
   * DEPRECATED: For custom models, this is the base model to use for image embeddings.
   * Default is general model.
   * </pre>
   *
   * <code>string existing_model_id = 3 [deprecated = true];</code>
   * @return The bytes for existingModelId.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getExistingModelIdBytes();

  /**
   * <pre>
   * For concept model predictions: Overrides the default_language for the app in a predict call.
   * </pre>
   *
   * <code>string language = 4;</code>
   * @return The language.
   */
  java.lang.String getLanguage();
  /**
   * <pre>
   * For concept model predictions: Overrides the default_language for the app in a predict call.
   * </pre>
   *
   * <code>string language = 4;</code>
   * @return The bytes for language.
   */
  com.google.protobuf.ByteString
      getLanguageBytes();

  /**
   * <pre>
   * DEPRECATED: Hyper-parameters for custom training.
   * Use new hyper_params field instead.
   * </pre>
   *
   * <code>string hyper_parameters = 5 [deprecated = true];</code>
   * @return The hyperParameters.
   */
  @java.lang.Deprecated java.lang.String getHyperParameters();
  /**
   * <pre>
   * DEPRECATED: Hyper-parameters for custom training.
   * Use new hyper_params field instead.
   * </pre>
   *
   * <code>string hyper_parameters = 5 [deprecated = true];</code>
   * @return The bytes for hyperParameters.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getHyperParametersBytes();

  /**
   * <pre>
   * For concept model predictions:  Maximum number of concepts in result. Defaults to 0 which under
   * the hood will return default of 20. We do a server side default in order to control this
   * feature in the future.
   * </pre>
   *
   * <code>uint32 max_concepts = 6 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   * @return The maxConcepts.
   */
  int getMaxConcepts();

  /**
   * <pre>
   * For concept model predictions: Minimum value of concept's probability score in result.
   * Defaults to 0.0 which means we won't do any thresholding as all probabilities will
   * likely be &gt; 0.0.
   * </pre>
   *
   * <code>float min_value = 7 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   * @return The minValue.
   */
  float getMinValue();

  /**
   * <pre>
   * For concept model predictions: Select concepts in result by name or by id
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept select_concepts = 8;</code>
   */
  java.util.List<com.clarifai.grpc.api.Concept> 
      getSelectConceptsList();
  /**
   * <pre>
   * For concept model predictions: Select concepts in result by name or by id
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept select_concepts = 8;</code>
   */
  com.clarifai.grpc.api.Concept getSelectConcepts(int index);
  /**
   * <pre>
   * For concept model predictions: Select concepts in result by name or by id
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept select_concepts = 8;</code>
   */
  int getSelectConceptsCount();
  /**
   * <pre>
   * For concept model predictions: Select concepts in result by name or by id
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept select_concepts = 8;</code>
   */
  java.util.List<? extends com.clarifai.grpc.api.ConceptOrBuilder> 
      getSelectConceptsOrBuilderList();
  /**
   * <pre>
   * For concept model predictions: Select concepts in result by name or by id
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept select_concepts = 8;</code>
   */
  com.clarifai.grpc.api.ConceptOrBuilder getSelectConceptsOrBuilder(
      int index);

  /**
   * <pre>
   * For custom concept model training: Training timeout of the model (in seconds)
   * </pre>
   *
   * <code>uint32 training_timeout = 9;</code>
   * @return The trainingTimeout.
   */
  int getTrainingTimeout();

  /**
   * <pre>
   * For model predictions on video: Sample delay for video predicting (1 frame per N milliseconds)
   * </pre>
   *
   * <code>uint32 sample_ms = 10;</code>
   * @return The sampleMs.
   */
  int getSampleMs();

  /**
   * <pre>
   * For custom deep training: Override for template name and test split percentage
   * test_split_percent defaults to 10 in training_coordinator/client.go
   * </pre>
   *
   * <code>uint32 test_split_percent = 11;</code>
   * @return The testSplitPercent.
   */
  int getTestSplitPercent();

  /**
   * <pre>
   * For custom model training: Hyperparameters for custom training
   * </pre>
   *
   * <code>.google.protobuf.Struct hyper_params = 13;</code>
   * @return Whether the hyperParams field is set.
   */
  boolean hasHyperParams();
  /**
   * <pre>
   * For custom model training: Hyperparameters for custom training
   * </pre>
   *
   * <code>.google.protobuf.Struct hyper_params = 13;</code>
   * @return The hyperParams.
   */
  com.google.protobuf.Struct getHyperParams();
  /**
   * <pre>
   * For custom model training: Hyperparameters for custom training
   * </pre>
   *
   * <code>.google.protobuf.Struct hyper_params = 13;</code>
   */
  com.google.protobuf.StructOrBuilder getHyperParamsOrBuilder();

  /**
   * <pre>
   * For custom model training: this is the base model version to use for image embeddings.
   * This has to be one of the embed models in the app workflow.
   * </pre>
   *
   * <code>string embed_model_version_id = 14;</code>
   * @return The embedModelVersionId.
   */
  java.lang.String getEmbedModelVersionId();
  /**
   * <pre>
   * For custom model training: this is the base model version to use for image embeddings.
   * This has to be one of the embed models in the app workflow.
   * </pre>
   *
   * <code>string embed_model_version_id = 14;</code>
   * @return The bytes for embedModelVersionId.
   */
  com.google.protobuf.ByteString
      getEmbedModelVersionIdBytes();

  /**
   * <pre>
   * For custom model training: Use this flag to fail on missing positive examples
   * By default we fill in the missing with random examples
   * </pre>
   *
   * <code>bool fail_on_missing_positive_examples = 15;</code>
   * @return The failOnMissingPositiveExamples.
   */
  boolean getFailOnMissingPositiveExamples();

  /**
   * <pre>
   * For custom model training: This is any additional metadata as a JSON object that we want
   * want to persist in the model's output config. This is a useful quick way to set fields for
   * introducing fields for new model types so we don't have to add a new proto field and DB field
   * each time. Please refer to the documentation or model implementation internally for more
   * details on what fields are supported for which models.
   * </pre>
   *
   * <code>.google.protobuf.Struct model_metadata = 17;</code>
   * @return Whether the modelMetadata field is set.
   */
  boolean hasModelMetadata();
  /**
   * <pre>
   * For custom model training: This is any additional metadata as a JSON object that we want
   * want to persist in the model's output config. This is a useful quick way to set fields for
   * introducing fields for new model types so we don't have to add a new proto field and DB field
   * each time. Please refer to the documentation or model implementation internally for more
   * details on what fields are supported for which models.
   * </pre>
   *
   * <code>.google.protobuf.Struct model_metadata = 17;</code>
   * @return The modelMetadata.
   */
  com.google.protobuf.Struct getModelMetadata();
  /**
   * <pre>
   * For custom model training: This is any additional metadata as a JSON object that we want
   * want to persist in the model's output config. This is a useful quick way to set fields for
   * introducing fields for new model types so we don't have to add a new proto field and DB field
   * each time. Please refer to the documentation or model implementation internally for more
   * details on what fields are supported for which models.
   * </pre>
   *
   * <code>.google.protobuf.Struct model_metadata = 17;</code>
   */
  com.google.protobuf.StructOrBuilder getModelMetadataOrBuilder();

  /**
   * <pre>
   * For custom deep training: Percentage value (0 to 100) of user's tolerance level to invalid
   * inputs among all training inputs. Training will be stopped with error thrown if actual
   * percent of invalid inputs is higher than this.
   * </pre>
   *
   * <code>float invalid_data_tolerance_percent = 18;</code>
   * @return The invalidDataTolerancePercent.
   */
  float getInvalidDataTolerancePercent();

  /**
   * <pre>
   * For custom deep training: Use this flag to set this model to use few shot K-NN classification
   * instead of custom concept classification. Default is false.
   * </pre>
   *
   * <code>bool use_knn_classifier = 19;</code>
   * @return The useKnnClassifier.
   */
  boolean getUseKnnClassifier();
}
