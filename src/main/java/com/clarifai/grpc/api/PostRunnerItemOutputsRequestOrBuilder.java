// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/service.proto

package com.clarifai.grpc.api;

public interface PostRunnerItemOutputsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.PostRunnerItemOutputsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
   * @return Whether the userAppId field is set.
   */
  boolean hasUserAppId();
  /**
   * <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
   * @return The userAppId.
   */
  com.clarifai.grpc.api.UserAppIDSet getUserAppId();
  /**
   * <code>.clarifai.api.UserAppIDSet user_app_id = 1;</code>
   */
  com.clarifai.grpc.api.UserAppIDSetOrBuilder getUserAppIdOrBuilder();

  /**
   * <pre>
   * The particular nodepool that runner belongs to
   * </pre>
   *
   * <code>string nodepool_id = 2;</code>
   * @return The nodepoolId.
   */
  java.lang.String getNodepoolId();
  /**
   * <pre>
   * The particular nodepool that runner belongs to
   * </pre>
   *
   * <code>string nodepool_id = 2;</code>
   * @return The bytes for nodepoolId.
   */
  com.google.protobuf.ByteString
      getNodepoolIdBytes();

  /**
   * <pre>
   * The particular runner that processed the work.
   * </pre>
   *
   * <code>string runner_id = 3;</code>
   * @return The runnerId.
   */
  java.lang.String getRunnerId();
  /**
   * <pre>
   * The particular runner that processed the work.
   * </pre>
   *
   * <code>string runner_id = 3;</code>
   * @return The bytes for runnerId.
   */
  com.google.protobuf.ByteString
      getRunnerIdBytes();

  /**
   * <pre>
   * The particular item of work processed.
   * </pre>
   *
   * <code>string runner_item_id = 4;</code>
   * @return The runnerItemId.
   */
  java.lang.String getRunnerItemId();
  /**
   * <pre>
   * The particular item of work processed.
   * </pre>
   *
   * <code>string runner_item_id = 4;</code>
   * @return The bytes for runnerItemId.
   */
  com.google.protobuf.ByteString
      getRunnerItemIdBytes();

  /**
   * <pre>
   * This allows you to create one or more runner by posting it to the API.
   * </pre>
   *
   * <code>repeated .clarifai.api.RunnerItemOutput runner_item_outputs = 5;</code>
   */
  java.util.List<com.clarifai.grpc.api.RunnerItemOutput> 
      getRunnerItemOutputsList();
  /**
   * <pre>
   * This allows you to create one or more runner by posting it to the API.
   * </pre>
   *
   * <code>repeated .clarifai.api.RunnerItemOutput runner_item_outputs = 5;</code>
   */
  com.clarifai.grpc.api.RunnerItemOutput getRunnerItemOutputs(int index);
  /**
   * <pre>
   * This allows you to create one or more runner by posting it to the API.
   * </pre>
   *
   * <code>repeated .clarifai.api.RunnerItemOutput runner_item_outputs = 5;</code>
   */
  int getRunnerItemOutputsCount();
  /**
   * <pre>
   * This allows you to create one or more runner by posting it to the API.
   * </pre>
   *
   * <code>repeated .clarifai.api.RunnerItemOutput runner_item_outputs = 5;</code>
   */
  java.util.List<? extends com.clarifai.grpc.api.RunnerItemOutputOrBuilder> 
      getRunnerItemOutputsOrBuilderList();
  /**
   * <pre>
   * This allows you to create one or more runner by posting it to the API.
   * </pre>
   *
   * <code>repeated .clarifai.api.RunnerItemOutput runner_item_outputs = 5;</code>
   */
  com.clarifai.grpc.api.RunnerItemOutputOrBuilder getRunnerItemOutputsOrBuilder(
      int index);

  /**
   * <pre>
   * This request has a status so that it can communicate to the API from runners and
   * communicate status, errors, etc. This is on the request since runners operate
   * in a reverse protocol. This status is also used to initiate the
   * ProcessRunnerItems request with RUNNER_STREAM_START code.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 6;</code>
   * @return Whether the status field is set.
   */
  boolean hasStatus();
  /**
   * <pre>
   * This request has a status so that it can communicate to the API from runners and
   * communicate status, errors, etc. This is on the request since runners operate
   * in a reverse protocol. This status is also used to initiate the
   * ProcessRunnerItems request with RUNNER_STREAM_START code.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 6;</code>
   * @return The status.
   */
  com.clarifai.grpc.api.status.Status getStatus();
  /**
   * <pre>
   * This request has a status so that it can communicate to the API from runners and
   * communicate status, errors, etc. This is on the request since runners operate
   * in a reverse protocol. This status is also used to initiate the
   * ProcessRunnerItems request with RUNNER_STREAM_START code.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 6;</code>
   */
  com.clarifai.grpc.api.status.StatusOrBuilder getStatusOrBuilder();

  /**
   * <pre>
   * A unique ID to represent the runner. This may be tied to an underlying compute instance
   * information or just an UUID.
   * </pre>
   *
   * <code>string runner_replica_id = 7;</code>
   * @return The runnerReplicaId.
   */
  java.lang.String getRunnerReplicaId();
  /**
   * <pre>
   * A unique ID to represent the runner. This may be tied to an underlying compute instance
   * information or just an UUID.
   * </pre>
   *
   * <code>string runner_replica_id = 7;</code>
   * @return The bytes for runnerReplicaId.
   */
  com.google.protobuf.ByteString
      getRunnerReplicaIdBytes();
}
