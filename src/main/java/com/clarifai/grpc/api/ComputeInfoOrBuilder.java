// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

public interface ComputeInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.ComputeInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Number of CPUs.
   * </pre>
   *
   * <code>uint32 num_cpus = 1;</code>
   * @return The numCpus.
   */
  int getNumCpus();

  /**
   * <pre>
   * Amount of CPU memory to use as a minimum.
   * </pre>
   *
   * <code>string cpu_memory = 2;</code>
   * @return The cpuMemory.
   */
  java.lang.String getCpuMemory();
  /**
   * <pre>
   * Amount of CPU memory to use as a minimum.
   * </pre>
   *
   * <code>string cpu_memory = 2;</code>
   * @return The bytes for cpuMemory.
   */
  com.google.protobuf.ByteString
      getCpuMemoryBytes();

  /**
   * <pre>
   * Number of accelerators (typically GPUs, TPUs, etc. not CPUs) for this resource.
   * </pre>
   *
   * <code>uint32 num_accelerators = 3;</code>
   * @return The numAccelerators.
   */
  int getNumAccelerators();

  /**
   * <pre>
   * Amount of accelerator/GPU memory to use as a minimum.
   * This is defined per accelerator.
   * This follows the format used by kubernetes like 1Ki, 2Mi, 3Gi, 4Ti.
   * </pre>
   *
   * <code>string accelerator_memory = 4;</code>
   * @return The acceleratorMemory.
   */
  java.lang.String getAcceleratorMemory();
  /**
   * <pre>
   * Amount of accelerator/GPU memory to use as a minimum.
   * This is defined per accelerator.
   * This follows the format used by kubernetes like 1Ki, 2Mi, 3Gi, 4Ti.
   * </pre>
   *
   * <code>string accelerator_memory = 4;</code>
   * @return The bytes for acceleratorMemory.
   */
  com.google.protobuf.ByteString
      getAcceleratorMemoryBytes();

  /**
   * <pre>
   * Or should it be removed completely and use the nodepool accelerator type itself.
   * These are the supported accelerators that the model can run on.
   * </pre>
   *
   * <code>repeated string accelerator_type = 5;</code>
   * @return A list containing the acceleratorType.
   */
  java.util.List<java.lang.String>
      getAcceleratorTypeList();
  /**
   * <pre>
   * Or should it be removed completely and use the nodepool accelerator type itself.
   * These are the supported accelerators that the model can run on.
   * </pre>
   *
   * <code>repeated string accelerator_type = 5;</code>
   * @return The count of acceleratorType.
   */
  int getAcceleratorTypeCount();
  /**
   * <pre>
   * Or should it be removed completely and use the nodepool accelerator type itself.
   * These are the supported accelerators that the model can run on.
   * </pre>
   *
   * <code>repeated string accelerator_type = 5;</code>
   * @param index The index of the element to return.
   * @return The acceleratorType at the given index.
   */
  java.lang.String getAcceleratorType(int index);
  /**
   * <pre>
   * Or should it be removed completely and use the nodepool accelerator type itself.
   * These are the supported accelerators that the model can run on.
   * </pre>
   *
   * <code>repeated string accelerator_type = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the acceleratorType at the given index.
   */
  com.google.protobuf.ByteString
      getAcceleratorTypeBytes(int index);
}
