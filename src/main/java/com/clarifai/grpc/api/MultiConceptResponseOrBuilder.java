// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/service.proto

package com.clarifai.grpc.api;

public interface MultiConceptResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.MultiConceptResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The response status.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 1;</code>
   */
  boolean hasStatus();
  /**
   * <pre>
   * The response status.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 1;</code>
   */
  com.clarifai.grpc.api.status.Status getStatus();
  /**
   * <pre>
   * The response status.
   * </pre>
   *
   * <code>.clarifai.api.status.Status status = 1;</code>
   */
  com.clarifai.grpc.api.status.StatusOrBuilder getStatusOrBuilder();

  /**
   * <pre>
   * The returned concepts.
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept concepts = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   */
  java.util.List<com.clarifai.grpc.api.Concept> 
      getConceptsList();
  /**
   * <pre>
   * The returned concepts.
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept concepts = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   */
  com.clarifai.grpc.api.Concept getConcepts(int index);
  /**
   * <pre>
   * The returned concepts.
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept concepts = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   */
  int getConceptsCount();
  /**
   * <pre>
   * The returned concepts.
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept concepts = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   */
  java.util.List<? extends com.clarifai.grpc.api.ConceptOrBuilder> 
      getConceptsOrBuilderList();
  /**
   * <pre>
   * The returned concepts.
   * </pre>
   *
   * <code>repeated .clarifai.api.Concept concepts = 2 [(.clarifai.api.utils.cl_show_if_empty) = true];</code>
   */
  com.clarifai.grpc.api.ConceptOrBuilder getConceptsOrBuilder(
      int index);
}
