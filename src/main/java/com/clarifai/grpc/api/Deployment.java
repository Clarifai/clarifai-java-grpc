// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

/**
 * <pre>
 * A deployment allows you to configure how runners for a particular type of resource will
 * scale up and down. These are unique per user_id, nodepool and model so for differnet nodepools
 * you can scale differently.
 * </pre>
 *
 * Protobuf type {@code clarifai.api.Deployment}
 */
public final class Deployment extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:clarifai.api.Deployment)
    DeploymentOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Deployment.newBuilder() to construct.
  private Deployment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Deployment() {
    id_ = "";
    userId_ = "";
    nodepools_ = java.util.Collections.emptyList();
    schedulingChoice_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Deployment();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Deployment(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            userId_ = s;
            break;
          }
          case 26: {
            com.clarifai.grpc.api.AutoscaleConfig.Builder subBuilder = null;
            if (autoscaleConfig_ != null) {
              subBuilder = autoscaleConfig_.toBuilder();
            }
            autoscaleConfig_ = input.readMessage(com.clarifai.grpc.api.AutoscaleConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(autoscaleConfig_);
              autoscaleConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              nodepools_ = new java.util.ArrayList<com.clarifai.grpc.api.Nodepool>();
              mutable_bitField0_ |= 0x00000001;
            }
            nodepools_.add(
                input.readMessage(com.clarifai.grpc.api.Nodepool.parser(), extensionRegistry));
            break;
          }
          case 42: {
            com.clarifai.grpc.api.Model.Builder subBuilder = null;
            if (objectCase_ == 5) {
              subBuilder = ((com.clarifai.grpc.api.Model) object_).toBuilder();
            }
            object_ =
                input.readMessage(com.clarifai.grpc.api.Model.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.clarifai.grpc.api.Model) object_);
              object_ = subBuilder.buildPartial();
            }
            objectCase_ = 5;
            break;
          }
          case 50: {
            com.clarifai.grpc.api.Workflow.Builder subBuilder = null;
            if (objectCase_ == 6) {
              subBuilder = ((com.clarifai.grpc.api.Workflow) object_).toBuilder();
            }
            object_ =
                input.readMessage(com.clarifai.grpc.api.Workflow.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.clarifai.grpc.api.Workflow) object_);
              object_ = subBuilder.buildPartial();
            }
            objectCase_ = 6;
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            schedulingChoice_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        nodepools_ = java.util.Collections.unmodifiableList(nodepools_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_Deployment_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_Deployment_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.clarifai.grpc.api.Deployment.class, com.clarifai.grpc.api.Deployment.Builder.class);
  }

  /**
   * <pre>
   * In some scenarios it may not be obvous how we should schedule a resource to underlying nodes
   * within the nodepool(s) above. The SchedulerChoice allows us to specify how to decide which
   * nodepool to use when there are multiple nodepools and how to decide which type of node
   * within a nodepool if there are multiple types.
   * If here are multiple nondepools then a decision on which to use comes into play
   * if it is not specified in the prediction request.
   * Even with a single nodepool a choice may come up such as when a resource that needs scheduling
   * has not specified the accelerator types it supports and the nodepool has multiple types.
   * </pre>
   *
   * Protobuf enum {@code clarifai.api.Deployment.SchedulingChoice}
   */
  public enum SchedulingChoice
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_SCHEDULING_CHOICE = 0;</code>
     */
    UNKNOWN_SCHEDULING_CHOICE(0),
    /**
     * <pre>
     * fail if there is any ambiguity.
     * </pre>
     *
     * <code>FAIL = 1;</code>
     */
    FAIL(1),
    /**
     * <pre>
     * randomly pick amongst the nodepools/nodes to assign.
     * </pre>
     *
     * <code>RANDOM = 2;</code>
     */
    RANDOM(2),
    /**
     * <pre>
     * choose the compute that is cheaper
     * </pre>
     *
     * <code>PRICE = 3;</code>
     */
    PRICE(3),
    /**
     * <pre>
     * schedule to the fastest known iption.
     * </pre>
     *
     * <code>PERFORMANCE = 4;</code>
     */
    PERFORMANCE(4),
    /**
     * <pre>
     * optimize based on network latency.
     * </pre>
     *
     * <code>NETWORK = 5;</code>
     */
    NETWORK(5),
    /**
     * <pre>
     * send to the least used nodepool based on it's capacity.
     * </pre>
     *
     * <code>UTILIZATION = 6;</code>
     */
    UTILIZATION(6),
    /**
     * <pre>
     * choose spot instances over on-demand
     * </pre>
     *
     * <code>PREFER_SPOT = 7;</code>
     */
    PREFER_SPOT(7),
    /**
     * <pre>
     * choose on-demand instances over spot.
     * </pre>
     *
     * <code>PREFER_ONDEMAND = 8;</code>
     */
    PREFER_ONDEMAND(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_SCHEDULING_CHOICE = 0;</code>
     */
    public static final int UNKNOWN_SCHEDULING_CHOICE_VALUE = 0;
    /**
     * <pre>
     * fail if there is any ambiguity.
     * </pre>
     *
     * <code>FAIL = 1;</code>
     */
    public static final int FAIL_VALUE = 1;
    /**
     * <pre>
     * randomly pick amongst the nodepools/nodes to assign.
     * </pre>
     *
     * <code>RANDOM = 2;</code>
     */
    public static final int RANDOM_VALUE = 2;
    /**
     * <pre>
     * choose the compute that is cheaper
     * </pre>
     *
     * <code>PRICE = 3;</code>
     */
    public static final int PRICE_VALUE = 3;
    /**
     * <pre>
     * schedule to the fastest known iption.
     * </pre>
     *
     * <code>PERFORMANCE = 4;</code>
     */
    public static final int PERFORMANCE_VALUE = 4;
    /**
     * <pre>
     * optimize based on network latency.
     * </pre>
     *
     * <code>NETWORK = 5;</code>
     */
    public static final int NETWORK_VALUE = 5;
    /**
     * <pre>
     * send to the least used nodepool based on it's capacity.
     * </pre>
     *
     * <code>UTILIZATION = 6;</code>
     */
    public static final int UTILIZATION_VALUE = 6;
    /**
     * <pre>
     * choose spot instances over on-demand
     * </pre>
     *
     * <code>PREFER_SPOT = 7;</code>
     */
    public static final int PREFER_SPOT_VALUE = 7;
    /**
     * <pre>
     * choose on-demand instances over spot.
     * </pre>
     *
     * <code>PREFER_ONDEMAND = 8;</code>
     */
    public static final int PREFER_ONDEMAND_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SchedulingChoice valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SchedulingChoice forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_SCHEDULING_CHOICE;
        case 1: return FAIL;
        case 2: return RANDOM;
        case 3: return PRICE;
        case 4: return PERFORMANCE;
        case 5: return NETWORK;
        case 6: return UTILIZATION;
        case 7: return PREFER_SPOT;
        case 8: return PREFER_ONDEMAND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SchedulingChoice>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SchedulingChoice> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SchedulingChoice>() {
            public SchedulingChoice findValueByNumber(int number) {
              return SchedulingChoice.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.clarifai.grpc.api.Deployment.getDescriptor().getEnumTypes().get(0);
    }

    private static final SchedulingChoice[] VALUES = values();

    public static SchedulingChoice valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SchedulingChoice(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:clarifai.api.Deployment.SchedulingChoice)
  }

  private int objectCase_ = 0;
  private java.lang.Object object_;
  public enum ObjectCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    MODEL(5),
    WORKFLOW(6),
    OBJECT_NOT_SET(0);
    private final int value;
    private ObjectCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ObjectCase valueOf(int value) {
      return forNumber(value);
    }

    public static ObjectCase forNumber(int value) {
      switch (value) {
        case 5: return MODEL;
        case 6: return WORKFLOW;
        case 0: return OBJECT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ObjectCase
  getObjectCase() {
    return ObjectCase.forNumber(
        objectCase_);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * An id for this configured deployment.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * An id for this configured deployment.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object userId_;
  /**
   * <pre>
   * The user who owns the deployment. These live in the user/org account.
   * </pre>
   *
   * <code>string user_id = 2;</code>
   * @return The userId.
   */
  @java.lang.Override
  public java.lang.String getUserId() {
    java.lang.Object ref = userId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The user who owns the deployment. These live in the user/org account.
   * </pre>
   *
   * <code>string user_id = 2;</code>
   * @return The bytes for userId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserIdBytes() {
    java.lang.Object ref = userId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AUTOSCALE_CONFIG_FIELD_NUMBER = 3;
  private com.clarifai.grpc.api.AutoscaleConfig autoscaleConfig_;
  /**
   * <pre>
   * How to autoscale the object.
   * </pre>
   *
   * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
   * @return Whether the autoscaleConfig field is set.
   */
  @java.lang.Override
  public boolean hasAutoscaleConfig() {
    return autoscaleConfig_ != null;
  }
  /**
   * <pre>
   * How to autoscale the object.
   * </pre>
   *
   * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
   * @return The autoscaleConfig.
   */
  @java.lang.Override
  public com.clarifai.grpc.api.AutoscaleConfig getAutoscaleConfig() {
    return autoscaleConfig_ == null ? com.clarifai.grpc.api.AutoscaleConfig.getDefaultInstance() : autoscaleConfig_;
  }
  /**
   * <pre>
   * How to autoscale the object.
   * </pre>
   *
   * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
   */
  @java.lang.Override
  public com.clarifai.grpc.api.AutoscaleConfigOrBuilder getAutoscaleConfigOrBuilder() {
    return getAutoscaleConfig();
  }

  public static final int NODEPOOLS_FIELD_NUMBER = 4;
  private java.util.List<com.clarifai.grpc.api.Nodepool> nodepools_;
  /**
   * <pre>
   * You can configure different autoscaling per nodepool(s).
   * These nodepools have to be also owned by the same user_id/org as this deployment.
   * If there is more than one nodepool we use the model's ComputeInfo to match
   * with what the nodepool provides to decide which one can handle it combined with the
   * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
   * we need a way to rank scheduling choices when we don't know how to decide (like a model
   * supports
   * </pre>
   *
   * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.clarifai.grpc.api.Nodepool> getNodepoolsList() {
    return nodepools_;
  }
  /**
   * <pre>
   * You can configure different autoscaling per nodepool(s).
   * These nodepools have to be also owned by the same user_id/org as this deployment.
   * If there is more than one nodepool we use the model's ComputeInfo to match
   * with what the nodepool provides to decide which one can handle it combined with the
   * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
   * we need a way to rank scheduling choices when we don't know how to decide (like a model
   * supports
   * </pre>
   *
   * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.clarifai.grpc.api.NodepoolOrBuilder> 
      getNodepoolsOrBuilderList() {
    return nodepools_;
  }
  /**
   * <pre>
   * You can configure different autoscaling per nodepool(s).
   * These nodepools have to be also owned by the same user_id/org as this deployment.
   * If there is more than one nodepool we use the model's ComputeInfo to match
   * with what the nodepool provides to decide which one can handle it combined with the
   * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
   * we need a way to rank scheduling choices when we don't know how to decide (like a model
   * supports
   * </pre>
   *
   * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
   */
  @java.lang.Override
  public int getNodepoolsCount() {
    return nodepools_.size();
  }
  /**
   * <pre>
   * You can configure different autoscaling per nodepool(s).
   * These nodepools have to be also owned by the same user_id/org as this deployment.
   * If there is more than one nodepool we use the model's ComputeInfo to match
   * with what the nodepool provides to decide which one can handle it combined with the
   * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
   * we need a way to rank scheduling choices when we don't know how to decide (like a model
   * supports
   * </pre>
   *
   * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
   */
  @java.lang.Override
  public com.clarifai.grpc.api.Nodepool getNodepools(int index) {
    return nodepools_.get(index);
  }
  /**
   * <pre>
   * You can configure different autoscaling per nodepool(s).
   * These nodepools have to be also owned by the same user_id/org as this deployment.
   * If there is more than one nodepool we use the model's ComputeInfo to match
   * with what the nodepool provides to decide which one can handle it combined with the
   * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
   * we need a way to rank scheduling choices when we don't know how to decide (like a model
   * supports
   * </pre>
   *
   * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
   */
  @java.lang.Override
  public com.clarifai.grpc.api.NodepoolOrBuilder getNodepoolsOrBuilder(
      int index) {
    return nodepools_.get(index);
  }

  public static final int MODEL_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Model
   * </pre>
   *
   * <code>.clarifai.api.Model model = 5;</code>
   * @return Whether the model field is set.
   */
  @java.lang.Override
  public boolean hasModel() {
    return objectCase_ == 5;
  }
  /**
   * <pre>
   * Model
   * </pre>
   *
   * <code>.clarifai.api.Model model = 5;</code>
   * @return The model.
   */
  @java.lang.Override
  public com.clarifai.grpc.api.Model getModel() {
    if (objectCase_ == 5) {
       return (com.clarifai.grpc.api.Model) object_;
    }
    return com.clarifai.grpc.api.Model.getDefaultInstance();
  }
  /**
   * <pre>
   * Model
   * </pre>
   *
   * <code>.clarifai.api.Model model = 5;</code>
   */
  @java.lang.Override
  public com.clarifai.grpc.api.ModelOrBuilder getModelOrBuilder() {
    if (objectCase_ == 5) {
       return (com.clarifai.grpc.api.Model) object_;
    }
    return com.clarifai.grpc.api.Model.getDefaultInstance();
  }

  public static final int WORKFLOW_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Workflow
   * </pre>
   *
   * <code>.clarifai.api.Workflow workflow = 6;</code>
   * @return Whether the workflow field is set.
   */
  @java.lang.Override
  public boolean hasWorkflow() {
    return objectCase_ == 6;
  }
  /**
   * <pre>
   * Workflow
   * </pre>
   *
   * <code>.clarifai.api.Workflow workflow = 6;</code>
   * @return The workflow.
   */
  @java.lang.Override
  public com.clarifai.grpc.api.Workflow getWorkflow() {
    if (objectCase_ == 6) {
       return (com.clarifai.grpc.api.Workflow) object_;
    }
    return com.clarifai.grpc.api.Workflow.getDefaultInstance();
  }
  /**
   * <pre>
   * Workflow
   * </pre>
   *
   * <code>.clarifai.api.Workflow workflow = 6;</code>
   */
  @java.lang.Override
  public com.clarifai.grpc.api.WorkflowOrBuilder getWorkflowOrBuilder() {
    if (objectCase_ == 6) {
       return (com.clarifai.grpc.api.Workflow) object_;
    }
    return com.clarifai.grpc.api.Workflow.getDefaultInstance();
  }

  public static final int SCHEDULING_CHOICE_FIELD_NUMBER = 7;
  private int schedulingChoice_;
  /**
   * <code>.clarifai.api.Deployment.SchedulingChoice scheduling_choice = 7;</code>
   * @return The enum numeric value on the wire for schedulingChoice.
   */
  @java.lang.Override public int getSchedulingChoiceValue() {
    return schedulingChoice_;
  }
  /**
   * <code>.clarifai.api.Deployment.SchedulingChoice scheduling_choice = 7;</code>
   * @return The schedulingChoice.
   */
  @java.lang.Override public com.clarifai.grpc.api.Deployment.SchedulingChoice getSchedulingChoice() {
    @SuppressWarnings("deprecation")
    com.clarifai.grpc.api.Deployment.SchedulingChoice result = com.clarifai.grpc.api.Deployment.SchedulingChoice.valueOf(schedulingChoice_);
    return result == null ? com.clarifai.grpc.api.Deployment.SchedulingChoice.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userId_);
    }
    if (autoscaleConfig_ != null) {
      output.writeMessage(3, getAutoscaleConfig());
    }
    for (int i = 0; i < nodepools_.size(); i++) {
      output.writeMessage(4, nodepools_.get(i));
    }
    if (objectCase_ == 5) {
      output.writeMessage(5, (com.clarifai.grpc.api.Model) object_);
    }
    if (objectCase_ == 6) {
      output.writeMessage(6, (com.clarifai.grpc.api.Workflow) object_);
    }
    if (schedulingChoice_ != com.clarifai.grpc.api.Deployment.SchedulingChoice.UNKNOWN_SCHEDULING_CHOICE.getNumber()) {
      output.writeEnum(7, schedulingChoice_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, userId_);
    }
    if (autoscaleConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAutoscaleConfig());
    }
    for (int i = 0; i < nodepools_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, nodepools_.get(i));
    }
    if (objectCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.clarifai.grpc.api.Model) object_);
    }
    if (objectCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.clarifai.grpc.api.Workflow) object_);
    }
    if (schedulingChoice_ != com.clarifai.grpc.api.Deployment.SchedulingChoice.UNKNOWN_SCHEDULING_CHOICE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, schedulingChoice_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.clarifai.grpc.api.Deployment)) {
      return super.equals(obj);
    }
    com.clarifai.grpc.api.Deployment other = (com.clarifai.grpc.api.Deployment) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getUserId()
        .equals(other.getUserId())) return false;
    if (hasAutoscaleConfig() != other.hasAutoscaleConfig()) return false;
    if (hasAutoscaleConfig()) {
      if (!getAutoscaleConfig()
          .equals(other.getAutoscaleConfig())) return false;
    }
    if (!getNodepoolsList()
        .equals(other.getNodepoolsList())) return false;
    if (schedulingChoice_ != other.schedulingChoice_) return false;
    if (!getObjectCase().equals(other.getObjectCase())) return false;
    switch (objectCase_) {
      case 5:
        if (!getModel()
            .equals(other.getModel())) return false;
        break;
      case 6:
        if (!getWorkflow()
            .equals(other.getWorkflow())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + USER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getUserId().hashCode();
    if (hasAutoscaleConfig()) {
      hash = (37 * hash) + AUTOSCALE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getAutoscaleConfig().hashCode();
    }
    if (getNodepoolsCount() > 0) {
      hash = (37 * hash) + NODEPOOLS_FIELD_NUMBER;
      hash = (53 * hash) + getNodepoolsList().hashCode();
    }
    hash = (37 * hash) + SCHEDULING_CHOICE_FIELD_NUMBER;
    hash = (53 * hash) + schedulingChoice_;
    switch (objectCase_) {
      case 5:
        hash = (37 * hash) + MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getModel().hashCode();
        break;
      case 6:
        hash = (37 * hash) + WORKFLOW_FIELD_NUMBER;
        hash = (53 * hash) + getWorkflow().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.clarifai.grpc.api.Deployment parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.clarifai.grpc.api.Deployment parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.Deployment parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.Deployment parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.clarifai.grpc.api.Deployment prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A deployment allows you to configure how runners for a particular type of resource will
   * scale up and down. These are unique per user_id, nodepool and model so for differnet nodepools
   * you can scale differently.
   * </pre>
   *
   * Protobuf type {@code clarifai.api.Deployment}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:clarifai.api.Deployment)
      com.clarifai.grpc.api.DeploymentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_Deployment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_Deployment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.clarifai.grpc.api.Deployment.class, com.clarifai.grpc.api.Deployment.Builder.class);
    }

    // Construct using com.clarifai.grpc.api.Deployment.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNodepoolsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      userId_ = "";

      if (autoscaleConfigBuilder_ == null) {
        autoscaleConfig_ = null;
      } else {
        autoscaleConfig_ = null;
        autoscaleConfigBuilder_ = null;
      }
      if (nodepoolsBuilder_ == null) {
        nodepools_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        nodepoolsBuilder_.clear();
      }
      schedulingChoice_ = 0;

      objectCase_ = 0;
      object_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_Deployment_descriptor;
    }

    @java.lang.Override
    public com.clarifai.grpc.api.Deployment getDefaultInstanceForType() {
      return com.clarifai.grpc.api.Deployment.getDefaultInstance();
    }

    @java.lang.Override
    public com.clarifai.grpc.api.Deployment build() {
      com.clarifai.grpc.api.Deployment result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.clarifai.grpc.api.Deployment buildPartial() {
      com.clarifai.grpc.api.Deployment result = new com.clarifai.grpc.api.Deployment(this);
      int from_bitField0_ = bitField0_;
      result.id_ = id_;
      result.userId_ = userId_;
      if (autoscaleConfigBuilder_ == null) {
        result.autoscaleConfig_ = autoscaleConfig_;
      } else {
        result.autoscaleConfig_ = autoscaleConfigBuilder_.build();
      }
      if (nodepoolsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          nodepools_ = java.util.Collections.unmodifiableList(nodepools_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.nodepools_ = nodepools_;
      } else {
        result.nodepools_ = nodepoolsBuilder_.build();
      }
      if (objectCase_ == 5) {
        if (modelBuilder_ == null) {
          result.object_ = object_;
        } else {
          result.object_ = modelBuilder_.build();
        }
      }
      if (objectCase_ == 6) {
        if (workflowBuilder_ == null) {
          result.object_ = object_;
        } else {
          result.object_ = workflowBuilder_.build();
        }
      }
      result.schedulingChoice_ = schedulingChoice_;
      result.objectCase_ = objectCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.clarifai.grpc.api.Deployment) {
        return mergeFrom((com.clarifai.grpc.api.Deployment)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.clarifai.grpc.api.Deployment other) {
      if (other == com.clarifai.grpc.api.Deployment.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getUserId().isEmpty()) {
        userId_ = other.userId_;
        onChanged();
      }
      if (other.hasAutoscaleConfig()) {
        mergeAutoscaleConfig(other.getAutoscaleConfig());
      }
      if (nodepoolsBuilder_ == null) {
        if (!other.nodepools_.isEmpty()) {
          if (nodepools_.isEmpty()) {
            nodepools_ = other.nodepools_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNodepoolsIsMutable();
            nodepools_.addAll(other.nodepools_);
          }
          onChanged();
        }
      } else {
        if (!other.nodepools_.isEmpty()) {
          if (nodepoolsBuilder_.isEmpty()) {
            nodepoolsBuilder_.dispose();
            nodepoolsBuilder_ = null;
            nodepools_ = other.nodepools_;
            bitField0_ = (bitField0_ & ~0x00000001);
            nodepoolsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodepoolsFieldBuilder() : null;
          } else {
            nodepoolsBuilder_.addAllMessages(other.nodepools_);
          }
        }
      }
      if (other.schedulingChoice_ != 0) {
        setSchedulingChoiceValue(other.getSchedulingChoiceValue());
      }
      switch (other.getObjectCase()) {
        case MODEL: {
          mergeModel(other.getModel());
          break;
        }
        case WORKFLOW: {
          mergeWorkflow(other.getWorkflow());
          break;
        }
        case OBJECT_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.clarifai.grpc.api.Deployment parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.clarifai.grpc.api.Deployment) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int objectCase_ = 0;
    private java.lang.Object object_;
    public ObjectCase
        getObjectCase() {
      return ObjectCase.forNumber(
          objectCase_);
    }

    public Builder clearObject() {
      objectCase_ = 0;
      object_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * An id for this configured deployment.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * An id for this configured deployment.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * An id for this configured deployment.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An id for this configured deployment.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An id for this configured deployment.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object userId_ = "";
    /**
     * <pre>
     * The user who owns the deployment. These live in the user/org account.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The userId.
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The user who owns the deployment. These live in the user/org account.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The bytes for userId.
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The user who owns the deployment. These live in the user/org account.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @param value The userId to set.
     * @return This builder for chaining.
     */
    public Builder setUserId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      userId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user who owns the deployment. These live in the user/org account.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserId() {
      
      userId_ = getDefaultInstance().getUserId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user who owns the deployment. These live in the user/org account.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @param value The bytes for userId to set.
     * @return This builder for chaining.
     */
    public Builder setUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      userId_ = value;
      onChanged();
      return this;
    }

    private com.clarifai.grpc.api.AutoscaleConfig autoscaleConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.AutoscaleConfig, com.clarifai.grpc.api.AutoscaleConfig.Builder, com.clarifai.grpc.api.AutoscaleConfigOrBuilder> autoscaleConfigBuilder_;
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     * @return Whether the autoscaleConfig field is set.
     */
    public boolean hasAutoscaleConfig() {
      return autoscaleConfigBuilder_ != null || autoscaleConfig_ != null;
    }
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     * @return The autoscaleConfig.
     */
    public com.clarifai.grpc.api.AutoscaleConfig getAutoscaleConfig() {
      if (autoscaleConfigBuilder_ == null) {
        return autoscaleConfig_ == null ? com.clarifai.grpc.api.AutoscaleConfig.getDefaultInstance() : autoscaleConfig_;
      } else {
        return autoscaleConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     */
    public Builder setAutoscaleConfig(com.clarifai.grpc.api.AutoscaleConfig value) {
      if (autoscaleConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        autoscaleConfig_ = value;
        onChanged();
      } else {
        autoscaleConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     */
    public Builder setAutoscaleConfig(
        com.clarifai.grpc.api.AutoscaleConfig.Builder builderForValue) {
      if (autoscaleConfigBuilder_ == null) {
        autoscaleConfig_ = builderForValue.build();
        onChanged();
      } else {
        autoscaleConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     */
    public Builder mergeAutoscaleConfig(com.clarifai.grpc.api.AutoscaleConfig value) {
      if (autoscaleConfigBuilder_ == null) {
        if (autoscaleConfig_ != null) {
          autoscaleConfig_ =
            com.clarifai.grpc.api.AutoscaleConfig.newBuilder(autoscaleConfig_).mergeFrom(value).buildPartial();
        } else {
          autoscaleConfig_ = value;
        }
        onChanged();
      } else {
        autoscaleConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     */
    public Builder clearAutoscaleConfig() {
      if (autoscaleConfigBuilder_ == null) {
        autoscaleConfig_ = null;
        onChanged();
      } else {
        autoscaleConfig_ = null;
        autoscaleConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     */
    public com.clarifai.grpc.api.AutoscaleConfig.Builder getAutoscaleConfigBuilder() {
      
      onChanged();
      return getAutoscaleConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     */
    public com.clarifai.grpc.api.AutoscaleConfigOrBuilder getAutoscaleConfigOrBuilder() {
      if (autoscaleConfigBuilder_ != null) {
        return autoscaleConfigBuilder_.getMessageOrBuilder();
      } else {
        return autoscaleConfig_ == null ?
            com.clarifai.grpc.api.AutoscaleConfig.getDefaultInstance() : autoscaleConfig_;
      }
    }
    /**
     * <pre>
     * How to autoscale the object.
     * </pre>
     *
     * <code>.clarifai.api.AutoscaleConfig autoscale_config = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.AutoscaleConfig, com.clarifai.grpc.api.AutoscaleConfig.Builder, com.clarifai.grpc.api.AutoscaleConfigOrBuilder> 
        getAutoscaleConfigFieldBuilder() {
      if (autoscaleConfigBuilder_ == null) {
        autoscaleConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.AutoscaleConfig, com.clarifai.grpc.api.AutoscaleConfig.Builder, com.clarifai.grpc.api.AutoscaleConfigOrBuilder>(
                getAutoscaleConfig(),
                getParentForChildren(),
                isClean());
        autoscaleConfig_ = null;
      }
      return autoscaleConfigBuilder_;
    }

    private java.util.List<com.clarifai.grpc.api.Nodepool> nodepools_ =
      java.util.Collections.emptyList();
    private void ensureNodepoolsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        nodepools_ = new java.util.ArrayList<com.clarifai.grpc.api.Nodepool>(nodepools_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.clarifai.grpc.api.Nodepool, com.clarifai.grpc.api.Nodepool.Builder, com.clarifai.grpc.api.NodepoolOrBuilder> nodepoolsBuilder_;

    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public java.util.List<com.clarifai.grpc.api.Nodepool> getNodepoolsList() {
      if (nodepoolsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodepools_);
      } else {
        return nodepoolsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public int getNodepoolsCount() {
      if (nodepoolsBuilder_ == null) {
        return nodepools_.size();
      } else {
        return nodepoolsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public com.clarifai.grpc.api.Nodepool getNodepools(int index) {
      if (nodepoolsBuilder_ == null) {
        return nodepools_.get(index);
      } else {
        return nodepoolsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder setNodepools(
        int index, com.clarifai.grpc.api.Nodepool value) {
      if (nodepoolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodepoolsIsMutable();
        nodepools_.set(index, value);
        onChanged();
      } else {
        nodepoolsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder setNodepools(
        int index, com.clarifai.grpc.api.Nodepool.Builder builderForValue) {
      if (nodepoolsBuilder_ == null) {
        ensureNodepoolsIsMutable();
        nodepools_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodepoolsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder addNodepools(com.clarifai.grpc.api.Nodepool value) {
      if (nodepoolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodepoolsIsMutable();
        nodepools_.add(value);
        onChanged();
      } else {
        nodepoolsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder addNodepools(
        int index, com.clarifai.grpc.api.Nodepool value) {
      if (nodepoolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodepoolsIsMutable();
        nodepools_.add(index, value);
        onChanged();
      } else {
        nodepoolsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder addNodepools(
        com.clarifai.grpc.api.Nodepool.Builder builderForValue) {
      if (nodepoolsBuilder_ == null) {
        ensureNodepoolsIsMutable();
        nodepools_.add(builderForValue.build());
        onChanged();
      } else {
        nodepoolsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder addNodepools(
        int index, com.clarifai.grpc.api.Nodepool.Builder builderForValue) {
      if (nodepoolsBuilder_ == null) {
        ensureNodepoolsIsMutable();
        nodepools_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodepoolsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder addAllNodepools(
        java.lang.Iterable<? extends com.clarifai.grpc.api.Nodepool> values) {
      if (nodepoolsBuilder_ == null) {
        ensureNodepoolsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodepools_);
        onChanged();
      } else {
        nodepoolsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder clearNodepools() {
      if (nodepoolsBuilder_ == null) {
        nodepools_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        nodepoolsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public Builder removeNodepools(int index) {
      if (nodepoolsBuilder_ == null) {
        ensureNodepoolsIsMutable();
        nodepools_.remove(index);
        onChanged();
      } else {
        nodepoolsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public com.clarifai.grpc.api.Nodepool.Builder getNodepoolsBuilder(
        int index) {
      return getNodepoolsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public com.clarifai.grpc.api.NodepoolOrBuilder getNodepoolsOrBuilder(
        int index) {
      if (nodepoolsBuilder_ == null) {
        return nodepools_.get(index);  } else {
        return nodepoolsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public java.util.List<? extends com.clarifai.grpc.api.NodepoolOrBuilder> 
         getNodepoolsOrBuilderList() {
      if (nodepoolsBuilder_ != null) {
        return nodepoolsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodepools_);
      }
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public com.clarifai.grpc.api.Nodepool.Builder addNodepoolsBuilder() {
      return getNodepoolsFieldBuilder().addBuilder(
          com.clarifai.grpc.api.Nodepool.getDefaultInstance());
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public com.clarifai.grpc.api.Nodepool.Builder addNodepoolsBuilder(
        int index) {
      return getNodepoolsFieldBuilder().addBuilder(
          index, com.clarifai.grpc.api.Nodepool.getDefaultInstance());
    }
    /**
     * <pre>
     * You can configure different autoscaling per nodepool(s).
     * These nodepools have to be also owned by the same user_id/org as this deployment.
     * If there is more than one nodepool we use the model's ComputeInfo to match
     * with what the nodepool provides to decide which one can handle it combined with the
     * NodepoolRank below. Note: even within a single nodepool if it is heterogeneous then
     * we need a way to rank scheduling choices when we don't know how to decide (like a model
     * supports
     * </pre>
     *
     * <code>repeated .clarifai.api.Nodepool nodepools = 4;</code>
     */
    public java.util.List<com.clarifai.grpc.api.Nodepool.Builder> 
         getNodepoolsBuilderList() {
      return getNodepoolsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.clarifai.grpc.api.Nodepool, com.clarifai.grpc.api.Nodepool.Builder, com.clarifai.grpc.api.NodepoolOrBuilder> 
        getNodepoolsFieldBuilder() {
      if (nodepoolsBuilder_ == null) {
        nodepoolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.clarifai.grpc.api.Nodepool, com.clarifai.grpc.api.Nodepool.Builder, com.clarifai.grpc.api.NodepoolOrBuilder>(
                nodepools_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        nodepools_ = null;
      }
      return nodepoolsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.Model, com.clarifai.grpc.api.Model.Builder, com.clarifai.grpc.api.ModelOrBuilder> modelBuilder_;
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     * @return Whether the model field is set.
     */
    @java.lang.Override
    public boolean hasModel() {
      return objectCase_ == 5;
    }
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     * @return The model.
     */
    @java.lang.Override
    public com.clarifai.grpc.api.Model getModel() {
      if (modelBuilder_ == null) {
        if (objectCase_ == 5) {
          return (com.clarifai.grpc.api.Model) object_;
        }
        return com.clarifai.grpc.api.Model.getDefaultInstance();
      } else {
        if (objectCase_ == 5) {
          return modelBuilder_.getMessage();
        }
        return com.clarifai.grpc.api.Model.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     */
    public Builder setModel(com.clarifai.grpc.api.Model value) {
      if (modelBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        object_ = value;
        onChanged();
      } else {
        modelBuilder_.setMessage(value);
      }
      objectCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     */
    public Builder setModel(
        com.clarifai.grpc.api.Model.Builder builderForValue) {
      if (modelBuilder_ == null) {
        object_ = builderForValue.build();
        onChanged();
      } else {
        modelBuilder_.setMessage(builderForValue.build());
      }
      objectCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     */
    public Builder mergeModel(com.clarifai.grpc.api.Model value) {
      if (modelBuilder_ == null) {
        if (objectCase_ == 5 &&
            object_ != com.clarifai.grpc.api.Model.getDefaultInstance()) {
          object_ = com.clarifai.grpc.api.Model.newBuilder((com.clarifai.grpc.api.Model) object_)
              .mergeFrom(value).buildPartial();
        } else {
          object_ = value;
        }
        onChanged();
      } else {
        if (objectCase_ == 5) {
          modelBuilder_.mergeFrom(value);
        } else {
          modelBuilder_.setMessage(value);
        }
      }
      objectCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     */
    public Builder clearModel() {
      if (modelBuilder_ == null) {
        if (objectCase_ == 5) {
          objectCase_ = 0;
          object_ = null;
          onChanged();
        }
      } else {
        if (objectCase_ == 5) {
          objectCase_ = 0;
          object_ = null;
        }
        modelBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     */
    public com.clarifai.grpc.api.Model.Builder getModelBuilder() {
      return getModelFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     */
    @java.lang.Override
    public com.clarifai.grpc.api.ModelOrBuilder getModelOrBuilder() {
      if ((objectCase_ == 5) && (modelBuilder_ != null)) {
        return modelBuilder_.getMessageOrBuilder();
      } else {
        if (objectCase_ == 5) {
          return (com.clarifai.grpc.api.Model) object_;
        }
        return com.clarifai.grpc.api.Model.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Model
     * </pre>
     *
     * <code>.clarifai.api.Model model = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.Model, com.clarifai.grpc.api.Model.Builder, com.clarifai.grpc.api.ModelOrBuilder> 
        getModelFieldBuilder() {
      if (modelBuilder_ == null) {
        if (!(objectCase_ == 5)) {
          object_ = com.clarifai.grpc.api.Model.getDefaultInstance();
        }
        modelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.Model, com.clarifai.grpc.api.Model.Builder, com.clarifai.grpc.api.ModelOrBuilder>(
                (com.clarifai.grpc.api.Model) object_,
                getParentForChildren(),
                isClean());
        object_ = null;
      }
      objectCase_ = 5;
      onChanged();;
      return modelBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.Workflow, com.clarifai.grpc.api.Workflow.Builder, com.clarifai.grpc.api.WorkflowOrBuilder> workflowBuilder_;
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     * @return Whether the workflow field is set.
     */
    @java.lang.Override
    public boolean hasWorkflow() {
      return objectCase_ == 6;
    }
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     * @return The workflow.
     */
    @java.lang.Override
    public com.clarifai.grpc.api.Workflow getWorkflow() {
      if (workflowBuilder_ == null) {
        if (objectCase_ == 6) {
          return (com.clarifai.grpc.api.Workflow) object_;
        }
        return com.clarifai.grpc.api.Workflow.getDefaultInstance();
      } else {
        if (objectCase_ == 6) {
          return workflowBuilder_.getMessage();
        }
        return com.clarifai.grpc.api.Workflow.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     */
    public Builder setWorkflow(com.clarifai.grpc.api.Workflow value) {
      if (workflowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        object_ = value;
        onChanged();
      } else {
        workflowBuilder_.setMessage(value);
      }
      objectCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     */
    public Builder setWorkflow(
        com.clarifai.grpc.api.Workflow.Builder builderForValue) {
      if (workflowBuilder_ == null) {
        object_ = builderForValue.build();
        onChanged();
      } else {
        workflowBuilder_.setMessage(builderForValue.build());
      }
      objectCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     */
    public Builder mergeWorkflow(com.clarifai.grpc.api.Workflow value) {
      if (workflowBuilder_ == null) {
        if (objectCase_ == 6 &&
            object_ != com.clarifai.grpc.api.Workflow.getDefaultInstance()) {
          object_ = com.clarifai.grpc.api.Workflow.newBuilder((com.clarifai.grpc.api.Workflow) object_)
              .mergeFrom(value).buildPartial();
        } else {
          object_ = value;
        }
        onChanged();
      } else {
        if (objectCase_ == 6) {
          workflowBuilder_.mergeFrom(value);
        } else {
          workflowBuilder_.setMessage(value);
        }
      }
      objectCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     */
    public Builder clearWorkflow() {
      if (workflowBuilder_ == null) {
        if (objectCase_ == 6) {
          objectCase_ = 0;
          object_ = null;
          onChanged();
        }
      } else {
        if (objectCase_ == 6) {
          objectCase_ = 0;
          object_ = null;
        }
        workflowBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     */
    public com.clarifai.grpc.api.Workflow.Builder getWorkflowBuilder() {
      return getWorkflowFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     */
    @java.lang.Override
    public com.clarifai.grpc.api.WorkflowOrBuilder getWorkflowOrBuilder() {
      if ((objectCase_ == 6) && (workflowBuilder_ != null)) {
        return workflowBuilder_.getMessageOrBuilder();
      } else {
        if (objectCase_ == 6) {
          return (com.clarifai.grpc.api.Workflow) object_;
        }
        return com.clarifai.grpc.api.Workflow.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Workflow
     * </pre>
     *
     * <code>.clarifai.api.Workflow workflow = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.Workflow, com.clarifai.grpc.api.Workflow.Builder, com.clarifai.grpc.api.WorkflowOrBuilder> 
        getWorkflowFieldBuilder() {
      if (workflowBuilder_ == null) {
        if (!(objectCase_ == 6)) {
          object_ = com.clarifai.grpc.api.Workflow.getDefaultInstance();
        }
        workflowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.Workflow, com.clarifai.grpc.api.Workflow.Builder, com.clarifai.grpc.api.WorkflowOrBuilder>(
                (com.clarifai.grpc.api.Workflow) object_,
                getParentForChildren(),
                isClean());
        object_ = null;
      }
      objectCase_ = 6;
      onChanged();;
      return workflowBuilder_;
    }

    private int schedulingChoice_ = 0;
    /**
     * <code>.clarifai.api.Deployment.SchedulingChoice scheduling_choice = 7;</code>
     * @return The enum numeric value on the wire for schedulingChoice.
     */
    @java.lang.Override public int getSchedulingChoiceValue() {
      return schedulingChoice_;
    }
    /**
     * <code>.clarifai.api.Deployment.SchedulingChoice scheduling_choice = 7;</code>
     * @param value The enum numeric value on the wire for schedulingChoice to set.
     * @return This builder for chaining.
     */
    public Builder setSchedulingChoiceValue(int value) {
      
      schedulingChoice_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.clarifai.api.Deployment.SchedulingChoice scheduling_choice = 7;</code>
     * @return The schedulingChoice.
     */
    @java.lang.Override
    public com.clarifai.grpc.api.Deployment.SchedulingChoice getSchedulingChoice() {
      @SuppressWarnings("deprecation")
      com.clarifai.grpc.api.Deployment.SchedulingChoice result = com.clarifai.grpc.api.Deployment.SchedulingChoice.valueOf(schedulingChoice_);
      return result == null ? com.clarifai.grpc.api.Deployment.SchedulingChoice.UNRECOGNIZED : result;
    }
    /**
     * <code>.clarifai.api.Deployment.SchedulingChoice scheduling_choice = 7;</code>
     * @param value The schedulingChoice to set.
     * @return This builder for chaining.
     */
    public Builder setSchedulingChoice(com.clarifai.grpc.api.Deployment.SchedulingChoice value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      schedulingChoice_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.clarifai.api.Deployment.SchedulingChoice scheduling_choice = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearSchedulingChoice() {
      
      schedulingChoice_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:clarifai.api.Deployment)
  }

  // @@protoc_insertion_point(class_scope:clarifai.api.Deployment)
  private static final com.clarifai.grpc.api.Deployment DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.clarifai.grpc.api.Deployment();
  }

  public static com.clarifai.grpc.api.Deployment getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Deployment>
      PARSER = new com.google.protobuf.AbstractParser<Deployment>() {
    @java.lang.Override
    public Deployment parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Deployment(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Deployment> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Deployment> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.clarifai.grpc.api.Deployment getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

