// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

public interface WorkflowNodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.WorkflowNode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * An identifier for this node in the graph. This is used when connecting NodeInputs
   * together.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * An identifier for this node in the graph. This is used when connecting NodeInputs
   * together.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * The model that will do the processing at this node. We only vlidate the model.id and
   * model.model_version.id fields.
   * </pre>
   *
   * <code>.clarifai.api.Model model = 2;</code>
   * @return Whether the model field is set.
   */
  boolean hasModel();
  /**
   * <pre>
   * The model that will do the processing at this node. We only vlidate the model.id and
   * model.model_version.id fields.
   * </pre>
   *
   * <code>.clarifai.api.Model model = 2;</code>
   * @return The model.
   */
  com.clarifai.grpc.api.Model getModel();
  /**
   * <pre>
   * The model that will do the processing at this node. We only vlidate the model.id and
   * model.model_version.id fields.
   * </pre>
   *
   * <code>.clarifai.api.Model model = 2;</code>
   */
  com.clarifai.grpc.api.ModelOrBuilder getModelOrBuilder();

  /**
   * <pre>
   * An operator will process this node.
   * </pre>
   *
   * <code>.clarifai.api.Operator operator = 5;</code>
   * @return Whether the operator field is set.
   */
  boolean hasOperator();
  /**
   * <pre>
   * An operator will process this node.
   * </pre>
   *
   * <code>.clarifai.api.Operator operator = 5;</code>
   * @return The operator.
   */
  com.clarifai.grpc.api.Operator getOperator();
  /**
   * <pre>
   * An operator will process this node.
   * </pre>
   *
   * <code>.clarifai.api.Operator operator = 5;</code>
   */
  com.clarifai.grpc.api.OperatorOrBuilder getOperatorOrBuilder();

  /**
   * <pre>
   * Each WorkflowNode can connect to multiple input nodes so that we can handle multi-model data
   * and more complex workflow operations.
   * </pre>
   *
   * <code>repeated .clarifai.api.NodeInput node_inputs = 3;</code>
   */
  java.util.List<com.clarifai.grpc.api.NodeInput> 
      getNodeInputsList();
  /**
   * <pre>
   * Each WorkflowNode can connect to multiple input nodes so that we can handle multi-model data
   * and more complex workflow operations.
   * </pre>
   *
   * <code>repeated .clarifai.api.NodeInput node_inputs = 3;</code>
   */
  com.clarifai.grpc.api.NodeInput getNodeInputs(int index);
  /**
   * <pre>
   * Each WorkflowNode can connect to multiple input nodes so that we can handle multi-model data
   * and more complex workflow operations.
   * </pre>
   *
   * <code>repeated .clarifai.api.NodeInput node_inputs = 3;</code>
   */
  int getNodeInputsCount();
  /**
   * <pre>
   * Each WorkflowNode can connect to multiple input nodes so that we can handle multi-model data
   * and more complex workflow operations.
   * </pre>
   *
   * <code>repeated .clarifai.api.NodeInput node_inputs = 3;</code>
   */
  java.util.List<? extends com.clarifai.grpc.api.NodeInputOrBuilder> 
      getNodeInputsOrBuilderList();
  /**
   * <pre>
   * Each WorkflowNode can connect to multiple input nodes so that we can handle multi-model data
   * and more complex workflow operations.
   * </pre>
   *
   * <code>repeated .clarifai.api.NodeInput node_inputs = 3;</code>
   */
  com.clarifai.grpc.api.NodeInputOrBuilder getNodeInputsOrBuilder(
      int index);

  /**
   * <pre>
   * suppress the output for workflow prediction
   * </pre>
   *
   * <code>bool suppress_output = 4;</code>
   * @return The suppressOutput.
   */
  boolean getSuppressOutput();
}
