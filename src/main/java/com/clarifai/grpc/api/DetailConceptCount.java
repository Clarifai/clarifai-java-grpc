// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

/**
 * Protobuf type {@code clarifai.api.DetailConceptCount}
 */
public  final class DetailConceptCount extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:clarifai.api.DetailConceptCount)
    DetailConceptCountOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DetailConceptCount.newBuilder() to construct.
  private DetailConceptCount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DetailConceptCount() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DetailConceptCount();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DetailConceptCount(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.clarifai.grpc.api.ConceptTypeCount.Builder subBuilder = null;
            if (processed_ != null) {
              subBuilder = processed_.toBuilder();
            }
            processed_ = input.readMessage(com.clarifai.grpc.api.ConceptTypeCount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(processed_);
              processed_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.clarifai.grpc.api.ConceptTypeCount.Builder subBuilder = null;
            if (toProcess_ != null) {
              subBuilder = toProcess_.toBuilder();
            }
            toProcess_ = input.readMessage(com.clarifai.grpc.api.ConceptTypeCount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(toProcess_);
              toProcess_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.clarifai.grpc.api.ConceptTypeCount.Builder subBuilder = null;
            if (errors_ != null) {
              subBuilder = errors_.toBuilder();
            }
            errors_ = input.readMessage(com.clarifai.grpc.api.ConceptTypeCount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(errors_);
              errors_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.clarifai.grpc.api.ConceptTypeCount.Builder subBuilder = null;
            if (processing_ != null) {
              subBuilder = processing_.toBuilder();
            }
            processing_ = input.readMessage(com.clarifai.grpc.api.ConceptTypeCount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(processing_);
              processing_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_DetailConceptCount_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_DetailConceptCount_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.clarifai.grpc.api.DetailConceptCount.class, com.clarifai.grpc.api.DetailConceptCount.Builder.class);
  }

  public static final int PROCESSED_FIELD_NUMBER = 1;
  private com.clarifai.grpc.api.ConceptTypeCount processed_;
  /**
   * <pre>
   * The concept count for processed assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
   */
  public boolean hasProcessed() {
    return processed_ != null;
  }
  /**
   * <pre>
   * The concept count for processed assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCount getProcessed() {
    return processed_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : processed_;
  }
  /**
   * <pre>
   * The concept count for processed assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getProcessedOrBuilder() {
    return getProcessed();
  }

  public static final int TO_PROCESS_FIELD_NUMBER = 2;
  private com.clarifai.grpc.api.ConceptTypeCount toProcess_;
  /**
   * <pre>
   * The concept count for to process assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
   */
  public boolean hasToProcess() {
    return toProcess_ != null;
  }
  /**
   * <pre>
   * The concept count for to process assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCount getToProcess() {
    return toProcess_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : toProcess_;
  }
  /**
   * <pre>
   * The concept count for to process assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getToProcessOrBuilder() {
    return getToProcess();
  }

  public static final int ERRORS_FIELD_NUMBER = 3;
  private com.clarifai.grpc.api.ConceptTypeCount errors_;
  /**
   * <pre>
   * The concept count for assets with status error
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
   */
  public boolean hasErrors() {
    return errors_ != null;
  }
  /**
   * <pre>
   * The concept count for assets with status error
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCount getErrors() {
    return errors_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : errors_;
  }
  /**
   * <pre>
   * The concept count for assets with status error
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getErrorsOrBuilder() {
    return getErrors();
  }

  public static final int PROCESSING_FIELD_NUMBER = 4;
  private com.clarifai.grpc.api.ConceptTypeCount processing_;
  /**
   * <pre>
   * The concept count for processing assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
   */
  public boolean hasProcessing() {
    return processing_ != null;
  }
  /**
   * <pre>
   * The concept count for processing assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCount getProcessing() {
    return processing_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : processing_;
  }
  /**
   * <pre>
   * The concept count for processing assets
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getProcessingOrBuilder() {
    return getProcessing();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (processed_ != null) {
      output.writeMessage(1, getProcessed());
    }
    if (toProcess_ != null) {
      output.writeMessage(2, getToProcess());
    }
    if (errors_ != null) {
      output.writeMessage(3, getErrors());
    }
    if (processing_ != null) {
      output.writeMessage(4, getProcessing());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (processed_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getProcessed());
    }
    if (toProcess_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getToProcess());
    }
    if (errors_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getErrors());
    }
    if (processing_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getProcessing());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.clarifai.grpc.api.DetailConceptCount)) {
      return super.equals(obj);
    }
    com.clarifai.grpc.api.DetailConceptCount other = (com.clarifai.grpc.api.DetailConceptCount) obj;

    if (hasProcessed() != other.hasProcessed()) return false;
    if (hasProcessed()) {
      if (!getProcessed()
          .equals(other.getProcessed())) return false;
    }
    if (hasToProcess() != other.hasToProcess()) return false;
    if (hasToProcess()) {
      if (!getToProcess()
          .equals(other.getToProcess())) return false;
    }
    if (hasErrors() != other.hasErrors()) return false;
    if (hasErrors()) {
      if (!getErrors()
          .equals(other.getErrors())) return false;
    }
    if (hasProcessing() != other.hasProcessing()) return false;
    if (hasProcessing()) {
      if (!getProcessing()
          .equals(other.getProcessing())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasProcessed()) {
      hash = (37 * hash) + PROCESSED_FIELD_NUMBER;
      hash = (53 * hash) + getProcessed().hashCode();
    }
    if (hasToProcess()) {
      hash = (37 * hash) + TO_PROCESS_FIELD_NUMBER;
      hash = (53 * hash) + getToProcess().hashCode();
    }
    if (hasErrors()) {
      hash = (37 * hash) + ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + getErrors().hashCode();
    }
    if (hasProcessing()) {
      hash = (37 * hash) + PROCESSING_FIELD_NUMBER;
      hash = (53 * hash) + getProcessing().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.DetailConceptCount parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.clarifai.grpc.api.DetailConceptCount prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code clarifai.api.DetailConceptCount}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:clarifai.api.DetailConceptCount)
      com.clarifai.grpc.api.DetailConceptCountOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_DetailConceptCount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_DetailConceptCount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.clarifai.grpc.api.DetailConceptCount.class, com.clarifai.grpc.api.DetailConceptCount.Builder.class);
    }

    // Construct using com.clarifai.grpc.api.DetailConceptCount.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (processedBuilder_ == null) {
        processed_ = null;
      } else {
        processed_ = null;
        processedBuilder_ = null;
      }
      if (toProcessBuilder_ == null) {
        toProcess_ = null;
      } else {
        toProcess_ = null;
        toProcessBuilder_ = null;
      }
      if (errorsBuilder_ == null) {
        errors_ = null;
      } else {
        errors_ = null;
        errorsBuilder_ = null;
      }
      if (processingBuilder_ == null) {
        processing_ = null;
      } else {
        processing_ = null;
        processingBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_DetailConceptCount_descriptor;
    }

    @java.lang.Override
    public com.clarifai.grpc.api.DetailConceptCount getDefaultInstanceForType() {
      return com.clarifai.grpc.api.DetailConceptCount.getDefaultInstance();
    }

    @java.lang.Override
    public com.clarifai.grpc.api.DetailConceptCount build() {
      com.clarifai.grpc.api.DetailConceptCount result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.clarifai.grpc.api.DetailConceptCount buildPartial() {
      com.clarifai.grpc.api.DetailConceptCount result = new com.clarifai.grpc.api.DetailConceptCount(this);
      if (processedBuilder_ == null) {
        result.processed_ = processed_;
      } else {
        result.processed_ = processedBuilder_.build();
      }
      if (toProcessBuilder_ == null) {
        result.toProcess_ = toProcess_;
      } else {
        result.toProcess_ = toProcessBuilder_.build();
      }
      if (errorsBuilder_ == null) {
        result.errors_ = errors_;
      } else {
        result.errors_ = errorsBuilder_.build();
      }
      if (processingBuilder_ == null) {
        result.processing_ = processing_;
      } else {
        result.processing_ = processingBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.clarifai.grpc.api.DetailConceptCount) {
        return mergeFrom((com.clarifai.grpc.api.DetailConceptCount)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.clarifai.grpc.api.DetailConceptCount other) {
      if (other == com.clarifai.grpc.api.DetailConceptCount.getDefaultInstance()) return this;
      if (other.hasProcessed()) {
        mergeProcessed(other.getProcessed());
      }
      if (other.hasToProcess()) {
        mergeToProcess(other.getToProcess());
      }
      if (other.hasErrors()) {
        mergeErrors(other.getErrors());
      }
      if (other.hasProcessing()) {
        mergeProcessing(other.getProcessing());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.clarifai.grpc.api.DetailConceptCount parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.clarifai.grpc.api.DetailConceptCount) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.clarifai.grpc.api.ConceptTypeCount processed_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> processedBuilder_;
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    public boolean hasProcessed() {
      return processedBuilder_ != null || processed_ != null;
    }
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount getProcessed() {
      if (processedBuilder_ == null) {
        return processed_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : processed_;
      } else {
        return processedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    public Builder setProcessed(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (processedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        processed_ = value;
        onChanged();
      } else {
        processedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    public Builder setProcessed(
        com.clarifai.grpc.api.ConceptTypeCount.Builder builderForValue) {
      if (processedBuilder_ == null) {
        processed_ = builderForValue.build();
        onChanged();
      } else {
        processedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    public Builder mergeProcessed(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (processedBuilder_ == null) {
        if (processed_ != null) {
          processed_ =
            com.clarifai.grpc.api.ConceptTypeCount.newBuilder(processed_).mergeFrom(value).buildPartial();
        } else {
          processed_ = value;
        }
        onChanged();
      } else {
        processedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    public Builder clearProcessed() {
      if (processedBuilder_ == null) {
        processed_ = null;
        onChanged();
      } else {
        processed_ = null;
        processedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount.Builder getProcessedBuilder() {
      
      onChanged();
      return getProcessedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getProcessedOrBuilder() {
      if (processedBuilder_ != null) {
        return processedBuilder_.getMessageOrBuilder();
      } else {
        return processed_ == null ?
            com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : processed_;
      }
    }
    /**
     * <pre>
     * The concept count for processed assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processed = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> 
        getProcessedFieldBuilder() {
      if (processedBuilder_ == null) {
        processedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder>(
                getProcessed(),
                getParentForChildren(),
                isClean());
        processed_ = null;
      }
      return processedBuilder_;
    }

    private com.clarifai.grpc.api.ConceptTypeCount toProcess_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> toProcessBuilder_;
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    public boolean hasToProcess() {
      return toProcessBuilder_ != null || toProcess_ != null;
    }
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount getToProcess() {
      if (toProcessBuilder_ == null) {
        return toProcess_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : toProcess_;
      } else {
        return toProcessBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    public Builder setToProcess(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (toProcessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        toProcess_ = value;
        onChanged();
      } else {
        toProcessBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    public Builder setToProcess(
        com.clarifai.grpc.api.ConceptTypeCount.Builder builderForValue) {
      if (toProcessBuilder_ == null) {
        toProcess_ = builderForValue.build();
        onChanged();
      } else {
        toProcessBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    public Builder mergeToProcess(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (toProcessBuilder_ == null) {
        if (toProcess_ != null) {
          toProcess_ =
            com.clarifai.grpc.api.ConceptTypeCount.newBuilder(toProcess_).mergeFrom(value).buildPartial();
        } else {
          toProcess_ = value;
        }
        onChanged();
      } else {
        toProcessBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    public Builder clearToProcess() {
      if (toProcessBuilder_ == null) {
        toProcess_ = null;
        onChanged();
      } else {
        toProcess_ = null;
        toProcessBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount.Builder getToProcessBuilder() {
      
      onChanged();
      return getToProcessFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getToProcessOrBuilder() {
      if (toProcessBuilder_ != null) {
        return toProcessBuilder_.getMessageOrBuilder();
      } else {
        return toProcess_ == null ?
            com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : toProcess_;
      }
    }
    /**
     * <pre>
     * The concept count for to process assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount to_process = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> 
        getToProcessFieldBuilder() {
      if (toProcessBuilder_ == null) {
        toProcessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder>(
                getToProcess(),
                getParentForChildren(),
                isClean());
        toProcess_ = null;
      }
      return toProcessBuilder_;
    }

    private com.clarifai.grpc.api.ConceptTypeCount errors_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> errorsBuilder_;
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    public boolean hasErrors() {
      return errorsBuilder_ != null || errors_ != null;
    }
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount getErrors() {
      if (errorsBuilder_ == null) {
        return errors_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : errors_;
      } else {
        return errorsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    public Builder setErrors(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        errors_ = value;
        onChanged();
      } else {
        errorsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    public Builder setErrors(
        com.clarifai.grpc.api.ConceptTypeCount.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        errors_ = builderForValue.build();
        onChanged();
      } else {
        errorsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    public Builder mergeErrors(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (errorsBuilder_ == null) {
        if (errors_ != null) {
          errors_ =
            com.clarifai.grpc.api.ConceptTypeCount.newBuilder(errors_).mergeFrom(value).buildPartial();
        } else {
          errors_ = value;
        }
        onChanged();
      } else {
        errorsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    public Builder clearErrors() {
      if (errorsBuilder_ == null) {
        errors_ = null;
        onChanged();
      } else {
        errors_ = null;
        errorsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount.Builder getErrorsBuilder() {
      
      onChanged();
      return getErrorsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getErrorsOrBuilder() {
      if (errorsBuilder_ != null) {
        return errorsBuilder_.getMessageOrBuilder();
      } else {
        return errors_ == null ?
            com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : errors_;
      }
    }
    /**
     * <pre>
     * The concept count for assets with status error
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount errors = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> 
        getErrorsFieldBuilder() {
      if (errorsBuilder_ == null) {
        errorsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder>(
                getErrors(),
                getParentForChildren(),
                isClean());
        errors_ = null;
      }
      return errorsBuilder_;
    }

    private com.clarifai.grpc.api.ConceptTypeCount processing_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> processingBuilder_;
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    public boolean hasProcessing() {
      return processingBuilder_ != null || processing_ != null;
    }
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount getProcessing() {
      if (processingBuilder_ == null) {
        return processing_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : processing_;
      } else {
        return processingBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    public Builder setProcessing(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (processingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        processing_ = value;
        onChanged();
      } else {
        processingBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    public Builder setProcessing(
        com.clarifai.grpc.api.ConceptTypeCount.Builder builderForValue) {
      if (processingBuilder_ == null) {
        processing_ = builderForValue.build();
        onChanged();
      } else {
        processingBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    public Builder mergeProcessing(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (processingBuilder_ == null) {
        if (processing_ != null) {
          processing_ =
            com.clarifai.grpc.api.ConceptTypeCount.newBuilder(processing_).mergeFrom(value).buildPartial();
        } else {
          processing_ = value;
        }
        onChanged();
      } else {
        processingBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    public Builder clearProcessing() {
      if (processingBuilder_ == null) {
        processing_ = null;
        onChanged();
      } else {
        processing_ = null;
        processingBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount.Builder getProcessingBuilder() {
      
      onChanged();
      return getProcessingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getProcessingOrBuilder() {
      if (processingBuilder_ != null) {
        return processingBuilder_.getMessageOrBuilder();
      } else {
        return processing_ == null ?
            com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : processing_;
      }
    }
    /**
     * <pre>
     * The concept count for processing assets
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount processing = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> 
        getProcessingFieldBuilder() {
      if (processingBuilder_ == null) {
        processingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder>(
                getProcessing(),
                getParentForChildren(),
                isClean());
        processing_ = null;
      }
      return processingBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:clarifai.api.DetailConceptCount)
  }

  // @@protoc_insertion_point(class_scope:clarifai.api.DetailConceptCount)
  private static final com.clarifai.grpc.api.DetailConceptCount DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.clarifai.grpc.api.DetailConceptCount();
  }

  public static com.clarifai.grpc.api.DetailConceptCount getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DetailConceptCount>
      PARSER = new com.google.protobuf.AbstractParser<DetailConceptCount>() {
    @java.lang.Override
    public DetailConceptCount parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DetailConceptCount(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DetailConceptCount> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DetailConceptCount> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.clarifai.grpc.api.DetailConceptCount getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

