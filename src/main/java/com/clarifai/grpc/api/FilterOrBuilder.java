// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

public interface FilterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:clarifai.api.Filter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * If True then this will flip the meaning of this part of the
   * query. This allow for queries such as dog AND ! metadata=={"blah":"value"}
   * </pre>
   *
   * <code>bool negate = 3;</code>
   * @return The negate.
   */
  boolean getNegate();

  /**
   * <pre>
   * FILTER by annotation information.
   * </pre>
   *
   * <code>.clarifai.api.Annotation annotation = 4;</code>
   * @return Whether the annotation field is set.
   */
  boolean hasAnnotation();
  /**
   * <pre>
   * FILTER by annotation information.
   * </pre>
   *
   * <code>.clarifai.api.Annotation annotation = 4;</code>
   * @return The annotation.
   */
  com.clarifai.grpc.api.Annotation getAnnotation();
  /**
   * <pre>
   * FILTER by annotation information.
   * </pre>
   *
   * <code>.clarifai.api.Annotation annotation = 4;</code>
   */
  com.clarifai.grpc.api.AnnotationOrBuilder getAnnotationOrBuilder();

  /**
   * <pre>
   * FILTER by input information.
   * For example you can filter inputs by status,
   * </pre>
   *
   * <code>.clarifai.api.Input input = 5;</code>
   * @return Whether the input field is set.
   */
  boolean hasInput();
  /**
   * <pre>
   * FILTER by input information.
   * For example you can filter inputs by status,
   * </pre>
   *
   * <code>.clarifai.api.Input input = 5;</code>
   * @return The input.
   */
  com.clarifai.grpc.api.Input getInput();
  /**
   * <pre>
   * FILTER by input information.
   * For example you can filter inputs by status,
   * </pre>
   *
   * <code>.clarifai.api.Input input = 5;</code>
   */
  com.clarifai.grpc.api.InputOrBuilder getInputOrBuilder();
}
