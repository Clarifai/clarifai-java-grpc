// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/resources.proto

package com.clarifai.grpc.api;

/**
 * Protobuf type {@code clarifai.api.ConceptCount}
 */
public  final class ConceptCount extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:clarifai.api.ConceptCount)
    ConceptCountOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ConceptCount.newBuilder() to construct.
  private ConceptCount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConceptCount() {
    id_ = "";
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ConceptCount();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ConceptCount(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 26: {
            com.clarifai.grpc.api.ConceptTypeCount.Builder subBuilder = null;
            if (conceptTypeCount_ != null) {
              subBuilder = conceptTypeCount_.toBuilder();
            }
            conceptTypeCount_ = input.readMessage(com.clarifai.grpc.api.ConceptTypeCount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(conceptTypeCount_);
              conceptTypeCount_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.clarifai.grpc.api.DetailConceptCount.Builder subBuilder = null;
            if (detailConceptCount_ != null) {
              subBuilder = detailConceptCount_.toBuilder();
            }
            detailConceptCount_ = input.readMessage(com.clarifai.grpc.api.DetailConceptCount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(detailConceptCount_);
              detailConceptCount_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_ConceptCount_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_ConceptCount_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.clarifai.grpc.api.ConceptCount.class, com.clarifai.grpc.api.ConceptCount.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * The concept's unique id.
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The concept's unique id.
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * The name of the concept.
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the concept.
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONCEPT_TYPE_COUNT_FIELD_NUMBER = 3;
  private com.clarifai.grpc.api.ConceptTypeCount conceptTypeCount_;
  /**
   * <pre>
   * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
   */
  public boolean hasConceptTypeCount() {
    return conceptTypeCount_ != null;
  }
  /**
   * <pre>
   * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCount getConceptTypeCount() {
    return conceptTypeCount_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : conceptTypeCount_;
  }
  /**
   * <pre>
   * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
   * </pre>
   *
   * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
   */
  public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getConceptTypeCountOrBuilder() {
    return getConceptTypeCount();
  }

  public static final int DETAIL_CONCEPT_COUNT_FIELD_NUMBER = 4;
  private com.clarifai.grpc.api.DetailConceptCount detailConceptCount_;
  /**
   * <pre>
   * The detail count for different assets status
   * </pre>
   *
   * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
   */
  public boolean hasDetailConceptCount() {
    return detailConceptCount_ != null;
  }
  /**
   * <pre>
   * The detail count for different assets status
   * </pre>
   *
   * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
   */
  public com.clarifai.grpc.api.DetailConceptCount getDetailConceptCount() {
    return detailConceptCount_ == null ? com.clarifai.grpc.api.DetailConceptCount.getDefaultInstance() : detailConceptCount_;
  }
  /**
   * <pre>
   * The detail count for different assets status
   * </pre>
   *
   * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
   */
  public com.clarifai.grpc.api.DetailConceptCountOrBuilder getDetailConceptCountOrBuilder() {
    return getDetailConceptCount();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (conceptTypeCount_ != null) {
      output.writeMessage(3, getConceptTypeCount());
    }
    if (detailConceptCount_ != null) {
      output.writeMessage(4, getDetailConceptCount());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (conceptTypeCount_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getConceptTypeCount());
    }
    if (detailConceptCount_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDetailConceptCount());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.clarifai.grpc.api.ConceptCount)) {
      return super.equals(obj);
    }
    com.clarifai.grpc.api.ConceptCount other = (com.clarifai.grpc.api.ConceptCount) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (hasConceptTypeCount() != other.hasConceptTypeCount()) return false;
    if (hasConceptTypeCount()) {
      if (!getConceptTypeCount()
          .equals(other.getConceptTypeCount())) return false;
    }
    if (hasDetailConceptCount() != other.hasDetailConceptCount()) return false;
    if (hasDetailConceptCount()) {
      if (!getDetailConceptCount()
          .equals(other.getDetailConceptCount())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasConceptTypeCount()) {
      hash = (37 * hash) + CONCEPT_TYPE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getConceptTypeCount().hashCode();
    }
    if (hasDetailConceptCount()) {
      hash = (37 * hash) + DETAIL_CONCEPT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getDetailConceptCount().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.clarifai.grpc.api.ConceptCount parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.clarifai.grpc.api.ConceptCount parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.ConceptCount parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.clarifai.grpc.api.ConceptCount parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.clarifai.grpc.api.ConceptCount prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code clarifai.api.ConceptCount}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:clarifai.api.ConceptCount)
      com.clarifai.grpc.api.ConceptCountOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_ConceptCount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_ConceptCount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.clarifai.grpc.api.ConceptCount.class, com.clarifai.grpc.api.ConceptCount.Builder.class);
    }

    // Construct using com.clarifai.grpc.api.ConceptCount.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      name_ = "";

      if (conceptTypeCountBuilder_ == null) {
        conceptTypeCount_ = null;
      } else {
        conceptTypeCount_ = null;
        conceptTypeCountBuilder_ = null;
      }
      if (detailConceptCountBuilder_ == null) {
        detailConceptCount_ = null;
      } else {
        detailConceptCount_ = null;
        detailConceptCountBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.clarifai.grpc.api.Resources.internal_static_clarifai_api_ConceptCount_descriptor;
    }

    @java.lang.Override
    public com.clarifai.grpc.api.ConceptCount getDefaultInstanceForType() {
      return com.clarifai.grpc.api.ConceptCount.getDefaultInstance();
    }

    @java.lang.Override
    public com.clarifai.grpc.api.ConceptCount build() {
      com.clarifai.grpc.api.ConceptCount result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.clarifai.grpc.api.ConceptCount buildPartial() {
      com.clarifai.grpc.api.ConceptCount result = new com.clarifai.grpc.api.ConceptCount(this);
      result.id_ = id_;
      result.name_ = name_;
      if (conceptTypeCountBuilder_ == null) {
        result.conceptTypeCount_ = conceptTypeCount_;
      } else {
        result.conceptTypeCount_ = conceptTypeCountBuilder_.build();
      }
      if (detailConceptCountBuilder_ == null) {
        result.detailConceptCount_ = detailConceptCount_;
      } else {
        result.detailConceptCount_ = detailConceptCountBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.clarifai.grpc.api.ConceptCount) {
        return mergeFrom((com.clarifai.grpc.api.ConceptCount)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.clarifai.grpc.api.ConceptCount other) {
      if (other == com.clarifai.grpc.api.ConceptCount.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasConceptTypeCount()) {
        mergeConceptTypeCount(other.getConceptTypeCount());
      }
      if (other.hasDetailConceptCount()) {
        mergeDetailConceptCount(other.getDetailConceptCount());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.clarifai.grpc.api.ConceptCount parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.clarifai.grpc.api.ConceptCount) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * The concept's unique id.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The concept's unique id.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The concept's unique id.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The concept's unique id.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The concept's unique id.
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the concept.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the concept.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the concept.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the concept.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the concept.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.clarifai.grpc.api.ConceptTypeCount conceptTypeCount_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> conceptTypeCountBuilder_;
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    public boolean hasConceptTypeCount() {
      return conceptTypeCountBuilder_ != null || conceptTypeCount_ != null;
    }
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount getConceptTypeCount() {
      if (conceptTypeCountBuilder_ == null) {
        return conceptTypeCount_ == null ? com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : conceptTypeCount_;
      } else {
        return conceptTypeCountBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    public Builder setConceptTypeCount(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (conceptTypeCountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        conceptTypeCount_ = value;
        onChanged();
      } else {
        conceptTypeCountBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    public Builder setConceptTypeCount(
        com.clarifai.grpc.api.ConceptTypeCount.Builder builderForValue) {
      if (conceptTypeCountBuilder_ == null) {
        conceptTypeCount_ = builderForValue.build();
        onChanged();
      } else {
        conceptTypeCountBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    public Builder mergeConceptTypeCount(com.clarifai.grpc.api.ConceptTypeCount value) {
      if (conceptTypeCountBuilder_ == null) {
        if (conceptTypeCount_ != null) {
          conceptTypeCount_ =
            com.clarifai.grpc.api.ConceptTypeCount.newBuilder(conceptTypeCount_).mergeFrom(value).buildPartial();
        } else {
          conceptTypeCount_ = value;
        }
        onChanged();
      } else {
        conceptTypeCountBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    public Builder clearConceptTypeCount() {
      if (conceptTypeCountBuilder_ == null) {
        conceptTypeCount_ = null;
        onChanged();
      } else {
        conceptTypeCount_ = null;
        conceptTypeCountBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCount.Builder getConceptTypeCountBuilder() {
      
      onChanged();
      return getConceptTypeCountFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    public com.clarifai.grpc.api.ConceptTypeCountOrBuilder getConceptTypeCountOrBuilder() {
      if (conceptTypeCountBuilder_ != null) {
        return conceptTypeCountBuilder_.getMessageOrBuilder();
      } else {
        return conceptTypeCount_ == null ?
            com.clarifai.grpc.api.ConceptTypeCount.getDefaultInstance() : conceptTypeCount_;
      }
    }
    /**
     * <pre>
     * The total count for concepts labeled for all asset statues (processing, to_process, processed, error)
     * </pre>
     *
     * <code>.clarifai.api.ConceptTypeCount concept_type_count = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder> 
        getConceptTypeCountFieldBuilder() {
      if (conceptTypeCountBuilder_ == null) {
        conceptTypeCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.ConceptTypeCount, com.clarifai.grpc.api.ConceptTypeCount.Builder, com.clarifai.grpc.api.ConceptTypeCountOrBuilder>(
                getConceptTypeCount(),
                getParentForChildren(),
                isClean());
        conceptTypeCount_ = null;
      }
      return conceptTypeCountBuilder_;
    }

    private com.clarifai.grpc.api.DetailConceptCount detailConceptCount_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.DetailConceptCount, com.clarifai.grpc.api.DetailConceptCount.Builder, com.clarifai.grpc.api.DetailConceptCountOrBuilder> detailConceptCountBuilder_;
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    public boolean hasDetailConceptCount() {
      return detailConceptCountBuilder_ != null || detailConceptCount_ != null;
    }
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    public com.clarifai.grpc.api.DetailConceptCount getDetailConceptCount() {
      if (detailConceptCountBuilder_ == null) {
        return detailConceptCount_ == null ? com.clarifai.grpc.api.DetailConceptCount.getDefaultInstance() : detailConceptCount_;
      } else {
        return detailConceptCountBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    public Builder setDetailConceptCount(com.clarifai.grpc.api.DetailConceptCount value) {
      if (detailConceptCountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        detailConceptCount_ = value;
        onChanged();
      } else {
        detailConceptCountBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    public Builder setDetailConceptCount(
        com.clarifai.grpc.api.DetailConceptCount.Builder builderForValue) {
      if (detailConceptCountBuilder_ == null) {
        detailConceptCount_ = builderForValue.build();
        onChanged();
      } else {
        detailConceptCountBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    public Builder mergeDetailConceptCount(com.clarifai.grpc.api.DetailConceptCount value) {
      if (detailConceptCountBuilder_ == null) {
        if (detailConceptCount_ != null) {
          detailConceptCount_ =
            com.clarifai.grpc.api.DetailConceptCount.newBuilder(detailConceptCount_).mergeFrom(value).buildPartial();
        } else {
          detailConceptCount_ = value;
        }
        onChanged();
      } else {
        detailConceptCountBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    public Builder clearDetailConceptCount() {
      if (detailConceptCountBuilder_ == null) {
        detailConceptCount_ = null;
        onChanged();
      } else {
        detailConceptCount_ = null;
        detailConceptCountBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    public com.clarifai.grpc.api.DetailConceptCount.Builder getDetailConceptCountBuilder() {
      
      onChanged();
      return getDetailConceptCountFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    public com.clarifai.grpc.api.DetailConceptCountOrBuilder getDetailConceptCountOrBuilder() {
      if (detailConceptCountBuilder_ != null) {
        return detailConceptCountBuilder_.getMessageOrBuilder();
      } else {
        return detailConceptCount_ == null ?
            com.clarifai.grpc.api.DetailConceptCount.getDefaultInstance() : detailConceptCount_;
      }
    }
    /**
     * <pre>
     * The detail count for different assets status
     * </pre>
     *
     * <code>.clarifai.api.DetailConceptCount detail_concept_count = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.clarifai.grpc.api.DetailConceptCount, com.clarifai.grpc.api.DetailConceptCount.Builder, com.clarifai.grpc.api.DetailConceptCountOrBuilder> 
        getDetailConceptCountFieldBuilder() {
      if (detailConceptCountBuilder_ == null) {
        detailConceptCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.clarifai.grpc.api.DetailConceptCount, com.clarifai.grpc.api.DetailConceptCount.Builder, com.clarifai.grpc.api.DetailConceptCountOrBuilder>(
                getDetailConceptCount(),
                getParentForChildren(),
                isClean());
        detailConceptCount_ = null;
      }
      return detailConceptCountBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:clarifai.api.ConceptCount)
  }

  // @@protoc_insertion_point(class_scope:clarifai.api.ConceptCount)
  private static final com.clarifai.grpc.api.ConceptCount DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.clarifai.grpc.api.ConceptCount();
  }

  public static com.clarifai.grpc.api.ConceptCount getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConceptCount>
      PARSER = new com.google.protobuf.AbstractParser<ConceptCount>() {
    @java.lang.Override
    public ConceptCount parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ConceptCount(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ConceptCount> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConceptCount> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.clarifai.grpc.api.ConceptCount getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

